{
  "openapi": "3.0.0",
  "info": {
    "title": "Service Recommendation",
    "version": "1.0",
    "description": "This specification defines the structure of the consulting model (Assessment, Recommendations, Corrective Actions, Observations, Technical Risks, Recommendation Installed Products, Recommendation Locations)",
    "contact": {
      "email": "mohamed.abousteit@se.com",
      "url": "http://se.com",
      "name": "Mohamed Abousteit"
    }
  },
  "servers": [
    {
      "url": "https://api.qa.se.com/v1/fulfillment/field-service/service-recommendation"
    }
  ],
  "paths": {
    "/assessments/search": {
      "post": {
        "summary": "Retrieve assessments based on Site IDs",
        "operationId": "post-assessments-search",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/assessment"
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "assessmentId": "aA67b0000005aSXCAY",
                        "assessmentType": "MPS Prime",
                        "site": {
                          "locationId": "aA67b0000005aSXCAY",
                          "locationName": "Nestle Site",
                          "siteId": "aA67b0000005aSXCAY",
                          "accountId": "aA67b0000005aSXCAY",
                          "siteLocation": true
                        },
                        "assessmentDate": "2020-03-30",
                        "ongoingRecommendations": 17,
                        "totalRecommendations": 25,
                        "workOrderId": "a2H7b000000iL1vEAE",
                        "hasDeliverables": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse_m619"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sorting-by",
            "description": "Field on which the sorting is done (Default : locationName)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sorting-order",
            "description": "ASC or DESC"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page-size",
            "description": "for pagination on assemssent list"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "for pagination on assessment list"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "reporting",
            "description": "If true, then the response will be a count of assessment records"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-PING-Authorization"
          }
        ],
        "description": "Fetch assessment information to show in a list view based on a list of Site Ids",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteIds": {
                    "type": "array",
                    "description": "list of sites ids (bFO id) E",
                    "items": {
                      "type": "string",
                      "example": "a2L12000002RCeREAW,a2L12000002RCeREAW"
                    }
                  },
                  "assessmentType": {
                    "type": "array",
                    "description": "Type of the assessment",
                    "items": {
                      "type": "string",
                      "example": "MPS Prime"
                    }
                  },
                  "assessmentDateMin": {
                    "type": "string",
                    "description": "Minimum assessment Date range",
                    "format": "date",
                    "example": "2020-03-30"
                  },
                  "assessmentDateMax": {
                    "type": "string",
                    "description": "Maximum assessment Date range",
                    "format": "date",
                    "example": "2020-03-31"
                  }
                },
                "required": [
                  "siteIds"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "siteIds": [
                      "a2L12000002RCeREAW",
                      "a2L12000002RCeRKZN"
                    ],
                    "assessmentType": [
                      "MPS Prime"
                    ],
                    "assessmentDateMin": "2020-03-30",
                    "assessmentDateMax": "2020-03-31"
                  }
                }
              }
            }
          },
          "description": "Retrieve Assessment list based on Site Ids\nFilter on Assessment Type, Assessement Date Range"
        },
        "tags": [
          "assessment"
        ]
      },
      "parameters": []
    },
    "/assessments/uploadfile": {
      "post": {
        "summary": "Attach a file",
        "operationId": "post-assessments-uploadfile",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string",
                      "example": "0697b000001ZJQqAAO"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "description": "attach a file on a record",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "firstPublishLocationId",
            "required": true,
            "description": "Id of the parent record"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fileName",
            "required": true,
            "description": "File name "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-BFO-Authorization"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-PING-Authorization"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "title",
            "description": "File title "
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "object"
              },
              "examples": {}
            }
          },
          "description": "File in BLOB format"
        }
      }
    },
    "/assessments/deliverables": {
      "parameters": [],
      "get": {
        "summary": "Retrieve list of deliverables",
        "operationId": "get-assessments-deliverables",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-file"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "parentId": "a2H1H000006SJWIUA4",
                        "fileSize": 500,
                        "fileName": "MPS Report",
                        "fileId": "0687b00000140SMAAY",
                        "fileExtension": "pdf",
                        "createdDate": "2021-07-06",
                        "downloadLink": "https://se--devfsseam2--c.documentforce.com/sfc/dist/version/download/?oid=00D010000008kyL&ids=06801000000ju5I&d=%2Fa%2F01000000H08q%2FL74SbjGTs0didL5hxUX_YeWwByg1xxRdcvIqfLCET_g&asPdf=false"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "example-1": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "description": "list of an assessment deliverables\nIf the assessment is linked to a work order the result is a list of files attached to the assessment and work order",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-PING-Authorization"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "assessment-id",
            "required": true
          }
        ]
      }
    },
    "/recommendations": {
      "get": {
        "summary": "Retrieve recommendation details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/recommendation-response"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "recommendationId": "aAB7b0000004eIzGAI",
                        "recommendationRef": "REC-00001",
                        "recommendationName": "MV Power Cable earth faulty",
                        "riskCategory": "High",
                        "findingCategory": "Maintenance Issue",
                        "dueDate": "2023-03-01",
                        "avoidedRisk": "Safety",
                        "recommendationStatus": "In progress",
                        "concernedAssetsLocations": "Asset number 1, Asset number 2 , Asset number 3, Location 1",
                        "healthSafetyStatus": "In progress",
                        "healthSafetyComment": "On going actions",
                        "facilityMaintenanceStatus": "In progress",
                        "facilityMaintenanceComment": "cable changed, waiting for security actions",
                        "correctiveAction": [
                          {
                            "correctiveActionId": "2F0051H00000Bzi05QAB",
                            "correctiveActionName": "Change cables",
                            "correctiveActionCode": "CORR01",
                            "relatedFiles": [
                              {
                                "fileId": "string",
                                "fileName": "MPS Report",
                                "fileSize": 500,
                                "fileExtension": "pdf"
                              }
                            ]
                          }
                        ],
                        "technicalRisk": [
                          {
                            "technicalRiskId": "2F0051H00000Azi05QCF",
                            "technicalRiskName": "Security risk",
                            "technicalRiskIdCode": "TEC001",
                            "relatedFiles": [
                              {
                                "fileId": "string",
                                "fileName": "MPS Report",
                                "fileSize": 500,
                                "fileExtension": "pdf"
                              }
                            ]
                          }
                        ],
                        "observation": [
                          {
                            "observationId": "2F0051H00000Azi05QAB",
                            "observationName": "Observation 1 ",
                            "observationCode": "OB-001",
                            "relatedFiles": [
                              {
                                "fileId": "string",
                                "fileName": "MPS Report",
                                "fileSize": 500,
                                "fileExtension": "pdf"
                              }
                            ]
                          }
                        ],
                        "relatedFiles": [
                          {
                            "fileId": "string",
                            "fileName": "MPS Report",
                            "fileSize": 500,
                            "fileExtension": "pdf"
                          }
                        ],
                        "coveredLocations": [
                          {
                            "recoCoveredLocationId": "string",
                            "location": {
                              "locationId": "string",
                              "locationName": "string"
                            }
                          }
                        ],
                        "coveredAssets": [
                          {
                            "recoCoveredProductId": "string",
                            "asset": {
                              "serialNumber": "ZA0735003884",
                              "name": "string",
                              "assetId": "string"
                            }
                          }
                        ],
                        "assessment": {
                          "assessmentId": "aA67b0000005aSXCAY",
                          "assessmentType": "MPS Prime",
                          "site": {
                            "locationId": "string",
                            "locationName": "string",
                            "siteLocation": true
                          },
                          "assessmentDate": "2020-03-30",
                          "ongoingRecommendations": 17,
                          "totalRecommendations": 25,
                          "workOrderId": "a2H7b000000iL1vEAE"
                        },
                        "History": [
                          {
                            "fieldName": "RecommendationStatus",
                            "oldValue": "In Progress",
                            "newValue": "Closed",
                            "lastModifiedBy": {
                              "userId": "2F0051H00000Azi05QAB",
                              "fullName": "Jack Jones"
                            },
                            "lastModifiedDate": "2020-04-15"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "get-recommendations",
        "description": "Retrieve recommendation details and related records",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "recommendation-id",
            "description": "recommendation bFO id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-PING-Authorization"
          }
        ],
        "tags": [
          "recommendation"
        ]
      },
      "patch": {
        "summary": "Update recommendations with  customer inputs",
        "operationId": "patch-recommendations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recommendationId": {
                        "type": "string",
                        "example": "aAB7b0000004eIzGAI"
                      },
                      "level1Status": {
                        "type": "string",
                        "example": "Closed"
                      },
                      "level1Comment": {
                        "type": "string",
                        "example": "Please close recommendation"
                      },
                      "level2Status": {
                        "type": "string",
                        "example": "Closed"
                      },
                      "level2Comment": {
                        "type": "string",
                        "example": "Actions done"
                      },
                      "recommendationStatus": {
                        "type": "string"
                      },
                      "resut": {
                        "$ref": "#/components/schemas/ErrorResponse_m619"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "recommendationId": "aAB7b0000004eIzGAI",
                        "healthSafetyStatus": "Closed",
                        "healthSafetyComment": "Please close recommendation",
                        "facilityMaintenanceStatus": "Closed",
                        "facilityMaintenanceComment": "Actions done",
                        "result": {
                          "success": true,
                          "errorCode": "string",
                          "errorMessage": "string"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-PING-Authorization"
          }
        ],
        "description": "Update recommendation customer inputs attributes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recommendationList": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "recommendationId": {
                          "type": "string",
                          "example": "aAB7b0000004eIzGAI"
                        },
                        "level1Status": {
                          "type": "string",
                          "example": "Closed"
                        },
                        "level1Comment": {
                          "type": "string",
                          "example": "Close recommendation please"
                        },
                        "level2Status": {
                          "type": "string",
                          "example": "Closed"
                        },
                        "level2Comment": {
                          "type": "string",
                          "example": "Actions done"
                        },
                        "recommendationStatus": {
                          "type": "string",
                          "example": "Closed"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {}
            }
          },
          "description": "Recommendation- Customer inputsupdate structure"
        },
        "tags": [
          "recommendation"
        ]
      },
      "post": {
        "summary": "Create recommendations and related records",
        "operationId": "post-recommendations",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "assessmentId": {
                        "type": "string"
                      },
                      "localId": {
                        "type": "string"
                      },
                      "recommendationList": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "recommendationName": {
                              "type": "string"
                            },
                            "recommendationId": {
                              "type": "string"
                            },
                            "localId": {
                              "type": "string"
                            },
                            "technicalRiskList": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "technicalRiskId": {
                                    "type": "string"
                                  },
                                  "localId": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "correctiveActionList": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "correctiveActionId": {
                                    "type": "string"
                                  },
                                  "localId": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "observationList": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "observationId": {
                                    "type": "string"
                                  },
                                  "localId": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "recommendationCoveredLocations": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "recommendationCoveredLocationId": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "recommendationCoveredAssets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "recommendationCoveredAssetId": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "assessmentId": "string",
                        "localId": "string",
                        "recommendationList": [
                          {
                            "recommendationName": "string",
                            "recommendationId": "string",
                            "localId": "string",
                            "technicalRiskList": [
                              {
                                "technicalRiskId": "string",
                                "localId": "string"
                              }
                            ],
                            "correctiveActionList": [
                              {
                                "correctiveActionId": "string",
                                "localId": "string"
                              }
                            ],
                            "observationList": [
                              {
                                "observationId": "string",
                                "localId": "string"
                              }
                            ],
                            "recommendationCoveredLocations": [
                              {
                                "recommendationCoveredLocationId": "string"
                              }
                            ],
                            "recommendationCoveredAssets": [
                              {
                                "recommendationCoveredAssetId": "string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-PING-Authorization"
          }
        ],
        "description": "Create assessment, recommendation and related records (Corrective Actions,Observations, Technical Risk,Recommendation Installed products, Recommendation Locations)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/recommendation-request"
                }
              },
              "examples": {
                "example-1": {
                  "value": [
                    {
                      "assessmentDate": "2021-09-03",
                      "assessmentType": "MPS Prime",
                      "siteID": "a2L7b000004O4JwEAK",
                      "workOrderId": "a2H7b0000011Vj2EAE",
                      "recommendationList": [
                        {
                          "recommendationName": "IP not maintained correctly",
                          "recommendationStatus": "In progress",
                          "findingCategory": "Maintenance Issue",
                          "repetitivefinding": "False",
                          "riskCategory": "Medium",
                          "dueDate": "2019-08-24",
                          "concernedAssetsAndLocations": "Asset 1; Asset 2",
                          "solutionBudgetAmount": 10000,
                          "solutionBudgetComment": "No comment",
                          "solutionBudgetType": "Amount",
                          "avoidedRiskAmount": 100,
                          "avoidedRiskComment": "No comment",
                          "avoidedRiskType": "Safety",
                          "currencyType": "EUR",
                          "localId": "EUR",
                          "correctiveActionList": [
                            {
                              "correctiveActionName": "Change battery",
                              "correctiveActionNameTranslated": "string",
                              "language": "string",
                              "reference": "string",
                              "localId": "string"
                            }
                          ],
                          "technicalRiskList": [
                            {
                              "technicalRiskName": "Fire",
                              "technicalRiskNameTranslated": "string",
                              "language": "string",
                              "reference": "string",
                              "localId": "string"
                            }
                          ],
                          "observationList": [
                            {
                              "observationName": "IP not maintained",
                              "observationNameTranslated": "string",
                              "language": "string",
                              "reference": "string",
                              "localId": "string"
                            }
                          ],
                          "recommendationCoveredLocations": [
                            {
                              "locationID": "a2L7b000004O4JwEAK"
                            }
                          ],
                          "recommendationCoveredAssets": [
                            {
                              "assetId": "a1a7b000001VwP7AAK"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "description": "The structure of Assessment, Recommendation and related records create call"
        },
        "tags": [
          "recommendation"
        ]
      },
      "parameters": []
    },
    "/recommendations/search": {
      "post": {
        "summary": "Retrieve recommendation list based on Assessment / Site",
        "operationId": "post-recommendations-search",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recommendation-summary"
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "description": "Count of returned recommendation records",
                          "example": 30
                        },
                        "countOverdue": {
                          "type": "integer",
                          "description": "Count of returned recommendations where the due date is greater than today",
                          "example": 3
                        },
                        "countCritical": {
                          "type": "integer",
                          "description": "Count of returned recommendations where status equal Critical",
                          "example": 10
                        },
                        "countHigh": {
                          "type": "integer",
                          "description": "Count of returned recommendations where status equal High",
                          "example": 5
                        },
                        "countMedium": {
                          "type": "integer",
                          "description": "Count of returned recommendations where status equal Medium",
                          "example": 7
                        },
                        "countLow": {
                          "type": "integer",
                          "description": "Count of returned recommendations where status equal Low",
                          "example": 13
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recommendation-download"
                      }
                    }
                  ]
                },
                "examples": {
                  "Count": {
                    "value": {
                      "totalCount": 35,
                      "countOverdue": 7,
                      "countCritical": 10,
                      "countHigh": 6,
                      "countMedium": 4,
                      "countLow": 15
                    }
                  },
                  "List of recommendation": {
                    "value": [
                      {
                        "recommendationId": "aAB7b0000004eIzGAI",
                        "recommendationRef": "REC-0001",
                        "riskCategory": "High",
                        "assessment": {
                          "assessmentId": "aA67b0000005aZYCAY",
                          "assessementType": "MPS Prime",
                          "Site": {
                            "locationId": "string",
                            "locationName": "string",
                            "siteLocation": true
                          }
                        },
                        "dueDate": "2019-08-24",
                        "recommendationStatus": "Open",
                        "recommendationName": "Cable Change"
                      }
                    ]
                  },
                  "Download": {
                    "value": [
                      {
                        "assessmentType": "MPS prime",
                        "assessmentDate": "2020-03-15",
                        "siteName": "ABC Boston - Site",
                        "recommendationId": "aAB7b0000004eIzGAI",
                        "recommendationRef": "REC-00001",
                        "recommendationName": "MV Power Cable earth faulty",
                        "riskCategory": "High",
                        "findingCategory": "Maintenance Issue",
                        "dueDate": "2023-03-01",
                        "avoidedRisk": "Safety",
                        "recommendationStatus": "In Progress",
                        "concernedAssetsLocations": "Asset number 1, Asset number 2 , Asset number 3, Location 1",
                        "level1Status": "In progress",
                        "level1Comment": "On going actions",
                        "level2Status": "In progress",
                        "level2Comment": "cable changed, waiting for security actions",
                        "correctiveAction": [
                          {
                            "correctiveActionName": "corrective Acr"
                          }
                        ],
                        "technicalRisk": [
                          {
                            "technicalRiskName": "Technical Risk 1"
                          }
                        ],
                        "observation": [
                          {
                            "ObservationName": "Observation 1"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponses"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sorting-by",
            "description": "Field on which the sorting is done."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sorting-order",
            "description": "ASC or DESC"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page-size",
            "description": "pagination"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "pagination"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "reporting",
            "description": "If true, then the response will be a count of recommendation by status and due date"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-PING-Authorization"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "key-word",
            "description": "search keywords"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "download",
            "description": "If true, the response will be a detailed list of recommendation to download."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteIds": {
                    "type": "array",
                    "description": "list of sites ids (bFO ids) Either SiteIds or Assessment Id is mandatory - Site Id label is case insentivie",
                    "items": {
                      "type": "string",
                      "example": "a2L12000002RCeREAW,a2L12000002RCeREAW"
                    }
                  },
                  "assessmentID": {
                    "type": "array",
                    "description": "Assessment BFO ID,  Either SiteIds or Assessment Id is mandatory",
                    "items": {
                      "type": "string",
                      "example": "aA67b0000005aSXCAY"
                    }
                  },
                  "recommendationStatus": {
                    "type": "array",
                    "description": "Status of the assemssment (Open,In progress,Awaiting HSE approval, Closed)",
                    "items": {
                      "type": "string",
                      "example": "Open,In progress"
                    }
                  },
                  "assessmentType": {
                    "type": "array",
                    "description": "Type of the assessment",
                    "example": [
                      "MPS Prime,MPS Entreprise"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "dueDateMin": {
                    "type": "string",
                    "description": "Minimum Due Date Range",
                    "format": "date",
                    "example": "2020-03-30"
                  },
                  "dueDateMax": {
                    "type": "string",
                    "description": "Maximum Due Date Range",
                    "example": "2020-03-30",
                    "format": "date"
                  },
                  "riskCategory": {
                    "type": "array",
                    "description": "Risk level of the finding (Critical, High,Medium,Low)",
                    "example": [
                      "High,Medium"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "overDue": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "siteIds"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "siteIds": [
                      "a2L12000002RCeREAW,a2L12000002RCeREAW"
                    ],
                    "assessmentID": [
                      "aA67b0000005aSXCAY"
                    ],
                    "recommendationStatus": [
                      "Open,In progress"
                    ],
                    "assessmentType": [
                      "MPS Prime,MPS Entreprise"
                    ],
                    "dueDateMin": "2020-03-30",
                    "dueDateMax": "2020-03-30",
                    "riskCategory": [
                      "High,Medium"
                    ],
                    "keyWord": "string"
                  }
                }
              }
            }
          },
          "description": "Retrieve List of Recommendation based on Site ID and/or Assemssment ID.\n\nFilter list based on Recommendation Status,Date Range and Risk category"
        },
        "description": "Retrieve list of recommendation in summary view",
        "tags": [
          "recommendation"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "recommendation-response": {
        "title": "recommendation-response",
        "type": "object",
        "description": "",
        "properties": {
          "recommendationId": {
            "type": "string",
            "description": "recommendation BFO ID",
            "example": "aAB7b0000004eIzGAI"
          },
          "recommendationRef": {
            "type": "string",
            "description": "Customer facing reference",
            "example": "REC-00001"
          },
          "recommendationName": {
            "type": "string",
            "description": "Recommendation description",
            "example": "MV Power Cable earth faulty"
          },
          "riskCategory": {
            "type": "string",
            "description": "level of risk - Lov (Critical-High-Medium-Low)",
            "example": "High"
          },
          "findingCategory": {
            "type": "string",
            "description": "Category of the finding",
            "example": "Maintenance Issue"
          },
          "dueDate": {
            "type": "string",
            "example": "2023-03-01",
            "description": "Due Date to close the recommendation"
          },
          "avoidedRisk": {
            "type": "string",
            "example": "Safety"
          },
          "recommendationStatus": {
            "type": "string",
            "example": "In progress"
          },
          "concernedAssetsLocations": {
            "type": "string",
            "example": "Asset number 1, Asset number 2 , Asset number 3, Location 1"
          },
          "healthSafetyStatus": {
            "type": "string",
            "example": "In progress"
          },
          "healthSafetyComment": {
            "type": "string",
            "example": "On going actions"
          },
          "facilityMaintenanceStatus": {
            "type": "string",
            "example": "In progress"
          },
          "facilityMaintenanceComment": {
            "type": "string",
            "example": "cable changed, waiting for security actions"
          },
          "correctiveAction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/correctiveAction"
            }
          },
          "assessment": {
            "$ref": "#/components/schemas/assessment"
          },
          "technicalRisk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/technicalRisk"
            }
          },
          "observation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/observation"
            }
          },
          "relatedFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/downloadable-file"
            }
          },
          "coveredLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recommendationcoveredLocation"
            }
          },
          "coveredAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recommendationCoveredProduct"
            }
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/history"
            }
          },
          "correctiveActionsConcat": {
            "type": "string",
            "description": "concatenates the Corrective action names related to the recommendation"
          },
          "technicalRiskConcat": {
            "type": "string",
            "description": "concatenates the Technical Risks names related to the recommendation"
          },
          "ObservationConcat": {
            "type": "string",
            "description": "concatenates the Observation names related to the recommendation"
          }
        }
      },
      "recommendation-download": {
        "title": "recommendation-download",
        "type": "object",
        "description": "",
        "properties": {
          "assessmentType": {
            "type": "string",
            "example": "MPS prime"
          },
          "assessmentDate": {
            "type": "string",
            "example": "2020-03-15"
          },
          "siteName": {
            "type": "string",
            "example": "ABC Boston - Site"
          },
          "recommendationId": {
            "type": "string",
            "description": "recommendation BFO ID",
            "example": "aAB7b0000004eIzGAI"
          },
          "recommendationRef": {
            "type": "string",
            "description": "Customer facing reference",
            "example": "REC-00001"
          },
          "recommendationName": {
            "type": "string",
            "description": "Recommendation description",
            "example": "MV Power Cable earth faulty"
          },
          "riskCategory": {
            "type": "string",
            "description": "level of risk - Lov (Critical-High-Medium-Low)",
            "example": "High"
          },
          "findingCategory": {
            "type": "string",
            "description": "Category of the finding",
            "example": "Maintenance Issue"
          },
          "dueDate": {
            "type": "string",
            "example": "2023-03-01",
            "description": "Due Date to close the recommendation"
          },
          "avoidedRisk": {
            "type": "string",
            "example": "Safety"
          },
          "recommendationStatus": {
            "type": "string",
            "example": "In progress"
          },
          "concernedAssetsLocations": {
            "type": "string",
            "example": "Asset number 1, Asset number 2 , Asset number 3, Location 1"
          },
          "level1Status": {
            "type": "string",
            "example": "In progress"
          },
          "level1Comment": {
            "type": "string",
            "example": "On going actions"
          },
          "level2Status": {
            "type": "string",
            "example": "In progress"
          },
          "level2Comment": {
            "type": "string",
            "example": "cable changed, waiting for security actions"
          },
          "correctiveAction": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "technicalRisk": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "observation": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "technicalRisk": {
        "title": "technicalRisk",
        "type": "object",
        "properties": {
          "technicalRiskId": {
            "type": "string",
            "example": "2F0051H00000Azi05QCF"
          },
          "technicalRiskName": {
            "type": "string",
            "example": "Security risk"
          },
          "technicalRiskIdCode": {
            "type": "string",
            "example": "TEC001"
          },
          "relatedFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/downloadable-file"
            }
          },
          "translatedTechnicalRisk": {
            "type": "string"
          }
        }
      },
      "correctiveAction": {
        "title": "correctiveAction",
        "type": "object",
        "properties": {
          "correctiveActionId": {
            "type": "string",
            "example": "2F0051H00000Bzi05QAB"
          },
          "correctiveActionName": {
            "type": "string",
            "example": "Change cables"
          },
          "correctiveActionCode": {
            "type": "string",
            "example": "CORR01"
          },
          "relatedFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/downloadable-file"
            }
          },
          "translatedCorrectiveAction": {
            "type": "string"
          }
        }
      },
      "observation": {
        "title": "observation",
        "type": "object",
        "properties": {
          "observationId": {
            "type": "string",
            "example": "2F0051H00000Azi05QAB"
          },
          "observationName": {
            "type": "string",
            "example": "Observation 1 "
          },
          "observationCode": {
            "type": "string",
            "example": "OB-001"
          },
          "relatedFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/downloadable-file"
            }
          },
          "translatedTechnicalRisk": {
            "type": "string"
          }
        }
      },
      "downloadable-file": {
        "title": "downloadableFile",
        "type": "object",
        "description": "",
        "properties": {
          "parentId": {
            "type": "string",
            "description": "Record Bfo ID  to which the file is attached",
            "example": "a2H1H000006SJWIUA4"
          },
          "fileSize": {
            "type": "number",
            "description": "size of the file",
            "example": 500
          },
          "fileName": {
            "type": "string",
            "description": "File name entered by the consultant / customer\n",
            "example": "MPS Report"
          },
          "fileId": {
            "type": "string",
            "description": "bFO File ID",
            "example": "0687b00000140SMAAY"
          },
          "fileExtension": {
            "type": "string",
            "description": "File Extension : .pdf .jpeg...",
            "example": "pdf"
          },
          "createdDate": {
            "type": "string",
            "format": "date",
            "example": "2021-07-06",
            "description": "creation date of the file - date when the file was attached"
          },
          "downloadLink": {
            "type": "string",
            "description": "Link to download the file",
            "example": "https://se--devfsseam2--c.documentforce.com/sfc/dist/version/download/?oid=00D010000008kyL&ids=06801000000ju5I&d=%2Fa%2F01000000H08q%2FL74SbjGTs0didL5hxUX_YeWwByg1xxRdcvIqfLCET_g&asPdf=false"
          }
        }
      },
      "recommendationCoveredProduct": {
        "title": "recommendationCoveredProduct",
        "type": "object",
        "properties": {
          "recoCoveredProductId": {
            "type": "string"
          },
          "asset": {
            "$ref": "#/components/schemas/FieldService-Asset-Basic.v1"
          }
        }
      },
      "recommendationcoveredLocation": {
        "title": "recommendationcoveredLocation",
        "type": "object",
        "properties": {
          "recoCoveredLocationId": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Field-Services-Location-Details.v1_m1642"
          }
        }
      },
      "assessment": {
        "title": "assessment",
        "type": "object",
        "description": "",
        "properties": {
          "assessmentId": {
            "type": "string",
            "description": "Assessment BFO ID",
            "example": "aA67b0000005aSXCAY"
          },
          "assessmentType": {
            "type": "string",
            "example": "MPS Prime",
            "description": "Assessment type - list of values"
          },
          "site": {
            "$ref": "#/components/schemas/Field-Services-Location-Details.v1"
          },
          "assessmentDate": {
            "type": "string",
            "format": "date",
            "example": "2020-03-30",
            "description": "Date of the execution of the assessment"
          },
          "ongoingRecommendations": {
            "type": "integer",
            "description": "count of recommendation related to the assessment with status = Open,In Progress, waiting for HSE Approval",
            "example": 17
          },
          "totalRecommendations": {
            "type": "integer",
            "description": "count of recommendation related to the assessment",
            "example": 25
          },
          "workOrderId": {
            "type": "string",
            "description": "Work order BFO ID if the assessment was done as part of a work order.",
            "example": "a2H7b000000iL1vEAE"
          },
          "hasDeliverables": {
            "type": "boolean",
            "description": "true if the assessment has deliverables",
            "default": true
          }
        }
      },
      "history": {
        "title": "History",
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "example": "RecommendationStatus"
          },
          "oldValue": {
            "type": "string",
            "example": "In Progress"
          },
          "newValue": {
            "type": "string",
            "example": "Closed"
          },
          "lastModifiedBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "example": "2F0051H00000Azi05QAB"
              },
              "fullName": {
                "type": "string",
                "example": "Jack Jones"
              }
            }
          },
          "lastModifiedDate": {
            "type": "string",
            "example": "2020-10-21 05:47:16",
            "format": "date-time",
            "description": "GMT Date Time  :   YYYY-MM-DD hh:mm:ss   "
          }
        }
      },
      "recommendation-summary": {
        "title": "recommendation-summary",
        "type": "object",
        "description": "recommendation data to be used with list of multiple recommendations",
        "properties": {
          "recommendationId": {
            "type": "string",
            "description": "bFO recommendation ID",
            "example": "aAB7b0000004eIzGAI"
          },
          "recommendationRef": {
            "type": "string",
            "description": "Customer facing ID",
            "example": "REC-0001"
          },
          "riskCategory": {
            "type": "string",
            "description": "Picklist to define the level of risk of the finding, the due date will be set accordingly (Critical,High,Medium,Low)",
            "enum": [
              "Critical",
              "High",
              "Medium",
              "Low"
            ],
            "example": "High"
          },
          "assessment": {
            "type": "object",
            "properties": {
              "assessmentId": {
                "type": "string",
                "description": "bFO Id of the assessment",
                "example": "aA67b0000005aZYCAY"
              },
              "assessementType": {
                "type": "string",
                "description": "Type of the assessment (MPS Prime, MPS Enterprise...)",
                "enum": [
                  "MPS Prime",
                  "MPS Re-assessment",
                  "MPS Connect",
                  "MPS Enterprise",
                  "Other MPS Execution"
                ],
                "example": "MPS Prime"
              },
              "site": {
                "$ref": "#/components/schemas/Field-Services-Location-Details.v1_m1643"
              }
            }
          },
          "dueDate": {
            "type": "string",
            "description": "Due date for the recommendation to be closed (depends on the risk category field)",
            "format": "date"
          },
          "recommendationStatus": {
            "type": "string",
            "description": "status of the recommendation (Open,In progress, awaiting HSE validation, closed) dependson the customer feedback",
            "example": "Open",
            "enum": [
              "Open",
              "In Progress",
              "Pending Level 2 validation",
              "Completed",
              "Cancelled"
            ]
          },
          "recommendationName": {
            "type": "string",
            "description": "free text descibing the recommendation entered by the consultant",
            "example": "Cable Change"
          },
          "isOverdue": {
            "type": "boolean",
            "default": false,
            "description": "OVERDUE FLAG: Is a boolean field with the folowing logic:   IF DUE DATE is < TODAY and STATUS = (Completed or Canceled) THEN  FLAG = False\nIF DUE DATE is < TODAY  and STATUS NOT equal to (Completed or Canceled)  THEN Flag = True\nIF DUE DATE is > Today Flag  False"
          }
        }
      },
      "result": {
        "title": "result",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "recommendation-request": {
        "title": "recommendation-request",
        "type": "object",
        "description": "Assessment, Recommendation and related objects",
        "properties": {
          "assessmentDate": {
            "type": "string",
            "format": "date",
            "example": "2021-09-03"
          },
          "assessmentType": {
            "type": "string",
            "example": "MPS Prime"
          },
          "siteID": {
            "type": "string",
            "example": "a2L7b000004O4JwEAK",
            "description": "SiteId label is case insensitive"
          },
          "workOrderId": {
            "type": "string",
            "example": "a2H7b0000011Vj2EAE"
          },
          "recommendationList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "recommendationName": {
                  "type": "string",
                  "example": "IP not maintained correctly"
                },
                "recommendationStatus": {
                  "type": "string",
                  "example": "In progress"
                },
                "findingCategory": {
                  "type": "string",
                  "example": "Maintenance Issue"
                },
                "repetitivefinding": {
                  "type": "boolean",
                  "example": "False"
                },
                "riskCategory": {
                  "type": "string",
                  "example": "Medium"
                },
                "dueDate": {
                  "type": "string",
                  "format": "date"
                },
                "concernedAssetsAndLocations": {
                  "type": "string",
                  "example": "Asset 1; Asset 2"
                },
                "solutionBudgetAmount": {
                  "type": "number",
                  "example": 10000
                },
                "solutionBudgetComment": {
                  "type": "string",
                  "example": "No comment"
                },
                "solutionBudgetType": {
                  "type": "string",
                  "example": "Amount"
                },
                "avoidedRiskAmount": {
                  "type": "number",
                  "example": 100
                },
                "avoidedRiskComment": {
                  "type": "string",
                  "example": "No comment"
                },
                "avoidedRiskType": {
                  "type": "string",
                  "example": "Safety"
                },
                "currencyType": {
                  "type": "string",
                  "example": "EUR"
                },
                "localId": {
                  "type": "string",
                  "example": "EUR"
                },
                "correctiveActionList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "correctiveActionName": {
                        "type": "string",
                        "example": "Change battery"
                      },
                      "correctiveActionNameTranslated": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "reference": {
                        "type": "string"
                      },
                      "localId": {
                        "type": "string"
                      }
                    }
                  }
                },
                "technicalRiskList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "technicalRiskName": {
                        "type": "string",
                        "example": "Fire"
                      },
                      "technicalRiskNameTranslated": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "reference": {
                        "type": "string"
                      },
                      "localId": {
                        "type": "string"
                      }
                    }
                  }
                },
                "observationList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "observationName": {
                        "type": "string",
                        "example": "IP not maintained"
                      },
                      "observationNameTranslated": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "reference": {
                        "type": "string"
                      },
                      "localId": {
                        "type": "string"
                      }
                    }
                  }
                },
                "recommendationCoveredLocations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "locationID": {
                        "type": "string",
                        "example": "a2L7b000004O4JwEAK"
                      }
                    }
                  }
                },
                "recommendationCoveredAssets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "assetId": {
                        "type": "string",
                        "example": "a1a7b000001VwP7AAK"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "siteID"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "title": "Error Response - OAS3",
        "description": "Error response returned to the consumer when an HTTP error status has occurred.",
        "properties": {
          "code": {
            "type": "string",
            "example": "MISSING_FIELD or 12345",
            "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
          },
          "userMessage": {
            "type": "string",
            "example": "Request is invalid and cannot be processed due one or more issues such as syntax errors, missing required fields, out of range values, conflicting query parameters, or unknown URI.",
            "description": "Human-readable general description of the error."
          },
          "developerMessage": {
            "type": "string",
            "description": "Optional human-readable description of the error details.",
            "example": "Required field is missing: productSku"
          },
          "moreInfo": {
            "type": "string",
            "description": "Optional error details or link to error documentation, which has more information about the error.",
            "example": "https://example.com/product-master/v1/error/12345"
          }
        },
        "required": [
          "code",
          "userMessage"
        ]
      },
      "ErrorResponse_m619": {
        "type": "object",
        "title": "Error Response - OAS3",
        "description": "Error response returned to the consumer when an HTTP error status has occurred.",
        "properties": {
          "code": {
            "type": "string",
            "example": "MISSING_FIELD or 12345",
            "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
          },
          "userMessage": {
            "type": "string",
            "example": "Request is invalid and cannot be processed due one or more issues such as syntax errors, missing required fields, out of range values, conflicting query parameters, or unknown URI.",
            "description": "Human-readable general description of the error."
          },
          "developerMessage": {
            "type": "string",
            "description": "Optional human-readable description of the error details.",
            "example": "Required field is missing: productSku"
          },
          "moreInfo": {
            "type": "string",
            "description": "Optional error details or link to error documentation, which has more information about the error.",
            "example": "https://example.com/product-master/v1/error/12345"
          }
        },
        "required": [
          "code",
          "userMessage"
        ]
      },
      "ErrorResponses": {
        "title": "Multiple Error Responses - OAS3",
        "description": "Single error response or a list of error responses returned to the consumer when an HTTP error status has occurred.\n\nMultiple errors are possible when\n* an operation detects more than one error for a single resource\n* a bulk operation detects an error for a subset of resources",
        "oneOf": [
          {
            "type": "object",
            "description": "Single error or a list of errors",
            "properties": {
              "code": {
                "type": "string",
                "example": "MISSING_FIELD or 12345",
                "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
              },
              "userMessage": {
                "type": "string",
                "example": "Request is invalid and cannot be processed due one or more issues such as syntax errors, missing required fields, out of range values, conflicting query parameters, or unknown URI.",
                "description": "Human-readable general description of the error."
              },
              "developerMessage": {
                "type": "string",
                "description": "Optional human-readable description of the error details.",
                "example": "Required field is missing: productSku"
              },
              "moreInfo": {
                "type": "string",
                "description": "Optional error details or link to error documentation, which has more information about the error.",
                "example": "https://example.com/product-master/v1/error/12345"
              }
            },
            "required": [
              "code",
              "userMessage"
            ]
          },
          {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "code",
                "userMessage"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST.",
                  "example": "MISSING_FIELD or 12345"
                },
                "userMessage": {
                  "type": "string",
                  "description": "Human-readable general description of the error.",
                  "example": "Request is invalid and cannot be processed due one or more issues such as syntax errors, missing required fields, out of range values, conflicting query parameters, or unknown URI."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error details.",
                  "example": "Required field is missing: productSku"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional error details or link to error documentation, which has more information about the error.",
                  "example": "https://example.com/product-master/v1/error/12345"
                },
                "failedResource": {
                  "type": "object",
                  "description": "Optional failed resource object, for use when the operation involves multiple resources.\n\nIt should be set to the element from the request list that caused the error."
                }
              }
            }
          }
        ]
      },
      "Field-Services-Location-Details.v1_m1642": {
        "title": "Field Services - Location - Details",
        "type": "object",
        "description": "",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "publisher ID of the location"
          },
          "locationName": {
            "type": "string",
            "description": "name of the asset in latin caracters : Free text field"
          }
        }
      },
      "Field-Services-Location-Details.v1_m1643": {
        "title": "Field Services - Location - Details",
        "type": "object",
        "description": "",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "publisher ID of the location"
          },
          "locationName": {
            "type": "string",
            "description": "name of the asset in latin caracters : Free text field"
          },
          "siteLocation": {
            "type": "boolean",
            "description": "If true the location is a Site location"
          }
        }
      },
      "Field-Services-Location-Details.v1": {
        "title": "Field Services - Location - Details",
        "type": "object",
        "description": "",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "publisher ID of the location"
          },
          "locationName": {
            "type": "string",
            "description": "name of the asset in latin caracters : Free text field"
          },
          "siteId": {
            "type": "string",
            "description": "Publisher Id of the Ultimate parent of the Location"
          },
          "accountId": {
            "type": "string",
            "description": "Publisher Id of the linked Account"
          },
          "siteLocation": {
            "type": "boolean",
            "description": "If true the location is a Site location"
          }
        }
      },
      "FieldService-Asset-Basic.v1": {
        "title": "Field Services - Asset - Basic structure",
        "type": "object",
        "description": "",
        "properties": {
          "serialNumber": {
            "description": "manufacturingacturing serial number of the asset. This attribute is used for Schneider manufacturingactured assets. This attribute is used to identify duplicate assets.Functional rule is to not push via automated connectors assets with no serial numbers if the source system is not enabling Schneider to consider the asset as tracked effectively (i.e. if the asset is a result of tracking assumption).",
            "example": "ZA0735003884",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "name of the asset in latin caracters : Free text field"
          },
          "assetId": {
            "type": "string",
            "description": "publisher ID of the installed product"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "name": "API Key",
        "type": "apiKey",
        "in": "query"
      },
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https//api.qa.se.com/token",
            "refreshUrl": "https//api.qa.se.com/token",
            "scopes": {}
          }
        }
      }
    },
    "responses": {}
  },
  "tags": [
    {
      "name": "assessment"
    },
    {
      "name": "recommendation"
    }
  ],
  "security": [
    {
      "apiKey": []
    },
    {
      "oauth2": []
    }
  ]
}