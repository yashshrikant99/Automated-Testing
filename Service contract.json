{
  "swagger": "2.0",
  "info": {
    "title": "ServiceContract V3.1",
    "version": "3.1",
    "description": "Set of services to retrieve a list of service contract headers, get the details of a contract (including entitlement and coverage) ad requesting a renewal opportunity",
    "contact": {
      "name": "Mohamed Abousteit",
      "email": "mohamed.abousteit@se.com",
      "url": "http://se.com"
    }
  },
  "host": "api.qa.se.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/service-contracts/search": {
      "post": {
        "summary": "Get list of Service Contracts (header) grouped by Site",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "Populated only whe countOnly is equal to 1"
                },
                "serviceContracts": {
                  "type": "array",
                  "description": "Populated only whe countOnly is equal to 0",
                  "items": {
                    "$ref": "#/definitions/ContractHeader"
                  }
                }
              }
            },
            "headers": {},
            "examples": {
              "example-1": {
                "count": 2,
                "serviceContracts": [
                  {
                    "bfoId": "a28J00000019yZfIAI",
                    "contractNumber": "E&A - 40911456 YR",
                    "siteId": "a28J00000019yZfIAI",
                    "siteName": "Babcock & Wilcox SITE",
                    "installedAtAccountId": "a28J00000019yZfIAI",
                    "installedAtAccountName": "Babcock & Wilcox",
                    "numberOfCoveredProducts": 15,
                    "startDate": "2019-01-03",
                    "endDate": "2022-01-03",
                    "status": "Validated",
                    "renewalOpportunityID": "006J000000ehANpIAM",
                    "renewalOpportunityStatus": "Cancelled by Schneider",
                    "renewalOpportunityStage": "0 - Closed",
                    "active": true
                  },
                  {
                    "bfoId": "a28J00000019yZfIAJ",
                    "contractNumber": "E&A - 40911456 YR",
                    "siteId": "a28J00000019yZfIAI",
                    "siteName": "Jayson Pharmaceutical",
                    "installedAtAccountId": "a28J00000019yZfIAI",
                    "installedAtAccountName": "Jayson Pharmaceutical",
                    "numberOfCoveredProducts": 15,
                    "startDate": "2019-01-03",
                    "endDate": "2022-01-03",
                    "status": "Validated",
                    "renewalOpportunityID": "",
                    "renewalOpportunityStatus": "",
                    "renewalOpportunityStage": "",
                    "active": true
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          }
        },
        "operationId": "post-service-contracts-search",
        "description": "Retrieve a list of Service Contracts (header) grouped by Site",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "installedAtAccountIds": {
                  "type": "array",
                  "description": "List of installed at Accounts (sites)",
                  "items": {
                    "type": "string"
                  }
                },
                "minContractEndDateFilter": {
                  "type": "string",
                  "description": "Filter with minContractEndDateFilter <= contractEndDate"
                },
                "maxContractEndDateFilter": {
                  "type": "string",
                  "description": "Filter with maxContractEndDateFilter >= contractEndDate"
                },
                "statusesFilter": {
                  "type": "array",
                  "description": "Filter with bFS contract statuses",
                  "items": {
                    "type": "string"
                  }
                },
                "activeFilter": {
                  "type": "string",
                  "description": "Filter on active contract"
                },
                "minContractStartDateFilter": {
                  "type": "string",
                  "description": "Filter with minContractStartDateFilter <= contractStartDate"
                },
                "maxContractStartDateFilter": {
                  "type": "string",
                  "description": "Filter with maxContractStartDateFilter >= contractStartDate"
                },
                "serviceTypeFilter": {
                  "type": "array",
                  "description": "Filter Service Line having included services with service type = serviceTypeFilter",
                  "items": {
                    "type": "string"
                  }
                },
                "hideFromCustomerView": {
                  "type": "boolean",
                  "description": "Hide from Customer view to exclude from data retrieved",
                  "default": false
                },
                "coveredInstalledProduct": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "goldenAssetId": {
                        "type": "string",
                        "description": "Asset Golden Asset ID"
                      },
                      "installedProductId": {
                        "type": "string",
                        "description": "Installed Product bFO ID"
                      }
                    }
                  }
                }
              }
            },
            "description": "Request body parameters"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "page",
            "description": "Current page",
            "format": "int32",
            "default": 1
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pagesize",
            "description": "Number of lines returned",
            "format": "int32",
            "default": 50
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "countonly",
            "description": "If yes, only return the count value",
            "default": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "keywords",
            "description": "For contextual search, applicable to :\n- Contract Number\n- Site name"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sortby",
            "description": "sorting column",
            "default": "contractEndDate"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sortorder",
            "description": "ASC or DESC",
            "default": "ASC"
          },
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "name": "user-context",
            "description": "To route API to different back end points"
          }
        ]
      },
      "parameters": []
    },
    "/service-contracts/details": {
      "parameters": [],
      "post": {
        "summary": "Get Service Contract Details",
        "operationId": "post-service-contracts",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serviceContractId": {
                  "type": "string",
                  "description": "bFO ID of the Service Contract Header"
                },
                "installedAtAccountIds": {
                  "type": "array",
                  "description": "List of sites. If empty, all the service lines are returned",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "serviceContractId"
              ]
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "description": "To route API to different back end points",
            "name": "user-context"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContractDetails"
            },
            "examples": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          }
        },
        "description": "Retrieve the details of a Service Contract (header, service lines with entitlement and covered products)"
      }
    },
    "/service-contracts/generate-opportunity": {
      "post": {
        "summary": "Request to generate a contract opportunity",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "opportunityId": {
                  "type": "string",
                  "description": "bFO Opportunity ID"
                },
                "opportunityReference": {
                  "type": "string",
                  "description": "Opportunity Reference"
                }
              },
              "required": [
                "opportunityId",
                "opportunityReference"
              ]
            },
            "examples": {
              "example-1": {
                "opportunityId": "string",
                "opportunityReference": "string"
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "opportunityId": {
                  "type": "string",
                  "description": "bFO opportunity ID"
                },
                "opportunityReference": {
                  "type": "string",
                  "description": "SE reference"
                }
              },
              "required": [
                "opportunityId",
                "opportunityReference"
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          }
        },
        "operationId": "post-renewal-opportunity",
        "description": "Request to generate a contract opportunity (renewal or amendment)",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serviceContractId": {
                  "type": "string",
                  "description": "bFO service contract Header ID to request renewal"
                },
                "description": {
                  "type": "string",
                  "description": "Opportunity description"
                },
                "sourceReference": {
                  "type": "string",
                  "description": "Opportunity source reference"
                },
                "installedAtAccountIds": {
                  "description": "List of installed at account IDs",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "opportunityType": {
                  "type": "string",
                  "description": "'RENEWAL' or 'AMENDMENT' "
                }
              },
              "required": [
                "serviceContractId",
                "opportunityType"
              ]
            },
            "description": ""
          },
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "name": "user-context",
            "description": "To route API to different back end points"
          }
        ]
      },
      "parameters": []
    },
    "/service-contracts/service-lines/search": {
      "post": {
        "summary": "Search for Service Lines",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "records count"
                },
                "serviceLines": {
                  "type": "array",
                  "description": "List of service lines",
                  "items": {
                    "$ref": "#/definitions/ServiceLine"
                  }
                }
              }
            },
            "examples": {
              "example-2": {
                "count": 0,
                "serviceLines": [
                  {
                    "serviceLineId": "string",
                    "name": "string",
                    "description": "string",
                    "startDate": "string",
                    "endDate": "string",
                    "numberOfCoveredProducts": 0,
                    "includedServices": [
                      {
                        "includedServicedId": "string",
                        "name": "string",
                        "description": "string",
                        "digitalPlatform": "string",
                        "serviceType": "string"
                      }
                    ],
                    "coveredProducts": [
                      {
                        "coveredProductId": "string",
                        "asset": {
                          "connectedAttributes": {
                            "connected": "true"
                          },
                          "underContract": true,
                          "serialNumber": "ZA0735003884",
                          "standardSerialNumber": "to be defined",
                          "manufacturingDate": "2019-08-24",
                          "note": "This is an example of note",
                          "version": "5",
                          "warrantyEndDate": "2019-02-26",
                          "warrantyStartDate": "2018-02-26",
                          "withdrawalDate": "2018-02-26",
                          "shipDate": "2019-04-17",
                          "installationDate": "2014-07-01",
                          "assetDescription": "E3LB PDU Rack 06",
                          "externalReferences": {
                            "customerAssetReference": "BREAKER-XAZE",
                            "customerAssetDescription": "123456",
                            "customerAssetSerialNumber": "00003N1905510108"
                          },
                          "name": "string",
                          "schneiderAssetId": "string",
                          "parentAssetId": "string",
                          "estimatedEndOfLifeDate": "string",
                          "purchasedDate": "2019-08-24",
                          "decommissioningDate": "2019-08-24",
                          "assetId": "string",
                          "firmwareVersion": "string",
                          "quantity": 0,
                          "usageStatus": "string",
                          "lifeCycleStatus": "Scrapped"
                        },
                        "product": {
                          "endOfLifeDate": "2014-07-01",
                          "subRange": "string",
                          "deviceType": "DEVTYP000174",
                          "range": "63545",
                          "brand": "string",
                          "productLine": "string",
                          "brandLabel": "string",
                          "rangeLabel": "string",
                          "deviceTypeLabel": "string",
                          "subRangeLabel": "string",
                          "fieldServiceBU": "string",
                          "serviceObsolecenseDate": "string",
                          "connectable": "Ready",
                          "serviceable": "string",
                          "schneiderCommercialReference": "string",
                          "endOfCommercialisationDate": "2014-07-01",
                          "endOfServiceDate": "string",
                          "obsolescenceStatus": "Unknown",
                          "productId": "string",
                          "productBu": "string",
                          "productGroupId": "string",
                          "brandToCreate": "string",
                          "subRangeToCreate": "string",
                          "RangeToCreate": "string",
                          "productDescription": "string"
                        },
                        "boReferenceLine": "string",
                        "shippedSerialNumber": "string",
                        "installedProductStartDate": "string",
                        "installedProductEndDate": "string",
                        "boReferenceCoveredProduct": "string",
                        "pduIpBfoId": "string",
                        "syncLogMessage": "string",
                        "accountDetails": {
                          "installedAtAccountId": "001A00000190oTpIAI",
                          "seAccountId": "string",
                          "name": "string",
                          "localName": "string",
                          "street": "boulevard lefebvre",
                          "streetLocalLanguage": "string",
                          "additionalAddress": "string",
                          "localAdditionalAdress": "string",
                          "zipCode": "75018",
                          "city": "Paris",
                          "localCity": "string",
                          "countryCode": "FR",
                          "stateProvinceCode": "string"
                        }
                      }
                    ],
                    "installedAtAccount": {
                      "bfoId": "string",
                      "name": "string",
                      "goldenId": "string"
                    },
                    "active": true,
                    "skuComRef": "string",
                    "entitlement": "string",
                    "price": 0,
                    "currencyCode": "string",
                    "quantity": 0,
                    "lineComment": "string",
                    "reasonForCancellation": "string",
                    "boReferenceLine": "string",
                    "unitPrice": 0,
                    "previousContractLineId": "string",
                    "volumeDiscount": 0,
                    "additionalDiscount": 0,
                    "cpqQuoteNumber": "string",
                    "partsDiscount": 0,
                    "laborDiscount": 0,
                    "yearlyUnitPriceBeforeDiscount": 0,
                    "requestedPrice": 0,
                    "requestedPriceFlag": true,
                    "quantityOfYear": 0,
                    "proRateApplied": true,
                    "upLift": 0,
                    "discountValue": 0,
                    "discountType": "string",
                    "initialDiscount": 0,
                    "cumulativeDiscount": 0,
                    "siteDetails": {
                      "name": "string",
                      "bfoId": "string"
                    },
                    "parentContractBoRef": "string",
                    "boLastUpdateTimeStamp": "string",
                    "schedulingUpgradeLineBoRef": "string",
                    "slaUpgradeLineBoRef": "string",
                    "renewedFromContractLineId": "string",
                    "syncLogMessage": "string",
                    "quoteLineId": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "examples": {
              "example-1": {
                "code": "MISSING_FIELD or 12345",
                "userMessage": "Required field is missing: productSku",
                "developerMessage": "Product master API ParseException: required tag <sku> expected",
                "moreInfo": "https://example.com/product-master/v1/error/12345"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "examples": {
              "example-1": {
                "code": "MISSING_FIELD or 12345",
                "userMessage": "Required field is missing: productSku",
                "developerMessage": "Product master API ParseException: required tag <sku> expected",
                "moreInfo": "https://example.com/product-master/v1/error/12345"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "examples": {
              "example-1": {
                "code": "MISSING_FIELD or 12345",
                "userMessage": "Required field is missing: productSku",
                "developerMessage": "Product master API ParseException: required tag <sku> expected",
                "moreInfo": "https://example.com/product-master/v1/error/12345"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "examples": {
              "example-1": {
                "code": "MISSING_FIELD or 12345",
                "userMessage": "Required field is missing: productSku",
                "developerMessage": "Product master API ParseException: required tag <sku> expected",
                "moreInfo": "https://example.com/product-master/v1/error/12345"
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "examples": {
              "example-1": {
                "code": "MISSING_FIELD or 12345",
                "userMessage": "Required field is missing: productSku",
                "developerMessage": "Product master API ParseException: required tag <sku> expected",
                "moreInfo": "https://example.com/product-master/v1/error/12345"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "examples": {
              "example-1": {
                "code": "MISSING_FIELD or 12345",
                "userMessage": "Required field is missing: productSku",
                "developerMessage": "Product master API ParseException: required tag <sku> expected",
                "moreInfo": "https://example.com/product-master/v1/error/12345"
              }
            }
          }
        },
        "operationId": "post-service-contracts-digital",
        "parameters": [
          {
            "type": "integer",
            "in": "query",
            "name": "page",
            "description": "Current page"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pagesize",
            "description": "Number of lines returned"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "countonly",
            "description": "If yes, only return the count value"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sortby",
            "description": "sorting column"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sortorder",
            "description": "ASC or DESC"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "installedAtAccountIds": {
                  "type": "array",
                  "description": "List of installed at accounts bFO ID",
                  "items": {
                    "type": "string"
                  }
                },
                "minServiceLineEndDateFilter": {
                  "type": "string",
                  "description": "Filter with minServiceLineEndDateFilter <= serviceLineEndDate"
                },
                "maxServiceLineEndDateFilter": {
                  "type": "string",
                  "description": "Filter with maxServiceLineEndDateFilter > serviceLineEndDate"
                },
                "activeFilter": {
                  "type": "boolean",
                  "description": "filter on active service lines"
                },
                "skusFilter": {
                  "type": "array",
                  "description": "filter on list of SKU",
                  "items": {
                    "type": "string"
                  }
                },
                "hasDigitalEntitlementFilter": {
                  "type": "boolean",
                  "description": "Filter Service Line having included services with remoting digital plaform not empty"
                },
                "digitalPlatformFilter": {
                  "type": "string",
                  "description": "Filter Service Line having included services with remoting digital plaform = digitalPlatformFilter"
                },
                "minServiceLineStartDateFilter": {
                  "type": "string",
                  "description": "Filter with minServiceLineStartDateFilter <= serviceLineStartDate"
                },
                "maxServiceLineStartDateFilter": {
                  "type": "string",
                  "description": "Filter with minServiceLineStartDateFilter > serviceLineStartDate"
                },
                "serviceContractId": {
                  "type": "string",
                  "description": "service contract bFO ID"
                },
                "serviceTypeFilter": {
                  "type": "array",
                  "description": "Filter Service Line having included services with service type = serviceTypeFilter",
                  "items": {
                    "type": "string"
                  }
                },
                "hideFromCustomerView": {
                  "type": "boolean",
                  "description": "Hide from Customer view to execlude from data retrieved"
                }
              }
            },
            "description": ""
          },
          {
            "type": "string",
            "in": "query",
            "name": "keywords",
            "description": "Keyword for search"
          },
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "name": "user-context",
            "description": "To route API to different back end points"
          }
        ],
        "description": "Search for Service Lines"
      },
      "parameters": []
    },
    "/service-contracts": {
      "post": {
        "summary": "Create Service Contracts (bulk)",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "contractCreationResults": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContractCreationResult"
                  }
                }
              }
            },
            "examples": {
              "example-1": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "operationId": "post-service-contract-bulk-create",
        "description": "Create service contracts (bulk mode)",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serviceContracts": {
                  "type": "array",
                  "description": "List of service contracts to create",
                  "items": {
                    "$ref": "#/definitions/ContractDetails"
                  }
                }
              },
              "required": [
                "serviceContracts"
              ]
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "user-context",
            "description": "To route API to different back end points"
          }
        ]
      },
      "parameters": [],
      "put": {
        "summary": "Update Service Contracts (bulk)",
        "operationId": "put-service-contracts",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "header-0": {
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "contractCreationResults": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContractCreationResult"
                  }
                }
              }
            },
            "examples": {
              "example-1": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serviceContracts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContractDetails"
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "user-context",
            "description": "To route API to different back end points"
          }
        ],
        "description": "Update service contracts (bulk mode)"
      }
    },
    "/service-contracts/contract-value-chain-players": {
      "post": {
        "summary": "Create Contract Value Chain Player (bulk)",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "contractValueChainPlayerCreationResults": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ContractValueChainPlayer-Post-Response"
                  }
                },
                "resultCode": {
                  "type": "string"
                },
                "resultMessage": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "contractValueChainPlayerCreationResults": [
                    {
                      "contractValueChainPlayerId": "a3o7b000000AnnSAAS",
                      "contractValueChainPlayerName": "CVCP-550991",
                      "resultCode": "string",
                      "resultMessage": "string"
                    }
                  ],
                  "resultCode": "string",
                  "resultMessage": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          }
        },
        "operationId": "post-contract-value-chain-player-bulk",
        "description": "Create contract value chain player (bulk mode)",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true,
            "description": "logged in user IDMS token to be passed by consumer application"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Field-Service-Contract-Value-Chain-Player_m3296"
              }
            }
          }
        ]
      },
      "parameters": [],
      "put": {
        "summary": "Update Contract Value Chain Player (bulk)",
        "operationId": "put-contract-value-chain-player-bulk",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "schema": {
              "type": "object",
              "properties": {
                "contractValueChainPlayerResults": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Field-Service-Contract-Value-Chain-Player"
                  }
                },
                "resultCode": {
                  "type": "string"
                },
                "resultMessage": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "contractValueChainPlayerResults": [
                    {
                      "contractValueChainPlayerId": "a3o7b000000AnnSAAS",
                      "contractValueChainPlayerName": "CVCP-550991",
                      "serviceContractId": "a287b000001ZvbgAAC",
                      "serviceContractName": "Test Vale - Premium Contract",
                      "contactId": "0037b00000qX81wAAC",
                      "contactRole": "Account Manager",
                      "contactPhone": "string",
                      "contactEmail": "testappbookcontact@yopmail.com",
                      "contactName": "Test User 2 UAT BR",
                      "caseAccess": "My Cases",
                      "documentVaultAccess": "No Access",
                      "pointLimit": 1,
                      "premiumSupportAccessRequest": "Requested",
                      "legacyBeneficiaryId": "string",
                      "masterPin": true,
                      "legacyPin": "string",
                      "accountId": "001A000000bJs5YIAS",
                      "accountName": "VALE - Headquarters",
                      "accountRole": "Agent",
                      "beneficiaryPointBalance": 0
                    }
                  ],
                  "resultCode": "string",
                  "resultMessage": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true,
            "description": "logged in user IDMS token to be passed by consumer application"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Field-Service-Contract-Value-Chain-Player_m3429"
              }
            }
          }
        ],
        "description": "Update contract value chain player (bulk mode)"
      },
      "get": {
        "summary": "Get Contract Value Chain Player (bulk)",
        "operationId": "get-contract-value-chain-player-search",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Field-Service-Contract-Value-Chain-Player_m3464"
              }
            },
            "examples": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_2"
            }
          }
        },
        "description": "Get Contract Value Chain players with details",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "servicecontractid",
            "required": true,
            "description": "Service maintenance Contract Id"
          },
          {
            "type": "string",
            "in": "header",
            "name": "X-BFO-Authorization",
            "required": true,
            "description": "BFO token"
          }
        ]
      }
    }
  },
  "definitions": {
    "ContractHeader": {
      "title": "ContractHeader",
      "type": "object",
      "description": "Service Contract Header (Parent)",
      "properties": {
        "bfoId": {
          "type": "string",
          "description": "bFO ID of the contract header"
        },
        "contractNumber": {
          "type": "string",
          "description": "Contract Name/ Number "
        },
        "siteName": {
          "type": "string",
          "description": "Location site name"
        },
        "numberOfCoveredProducts": {
          "type": "integer",
          "description": "Total number of covered assets under all the service line at the same site"
        },
        "startDate": {
          "type": "string",
          "description": "Start date of the contract header"
        },
        "endDate": {
          "type": "string",
          "description": "End date of the contract header"
        },
        "status": {
          "type": "string",
          "description": "bFS status of the contract Header"
        },
        "renewalOpportunityId": {
          "type": "string",
          "description": "bFO ID of the related renewal opportunity (if any)"
        },
        "renewalOpportunityStatus": {
          "type": "string",
          "description": "Status of the related renewal opportunity (if any)"
        },
        "active": {
          "type": "boolean",
          "description": "is contract header active?"
        },
        "renewalOpportunityStage": {
          "type": "string",
          "description": "stage of the renewal opportunity (if any)"
        },
        "siteId": {
          "type": "string",
          "description": "bFO ID of the site location"
        },
        "installedAtAccountName": {
          "type": "string",
          "description": "Installed At Account Name"
        },
        "installedAtAccountId": {
          "type": "string",
          "description": "bFO ID of the installed at Account"
        },
        "amendmentOpportunityId": {
          "type": "string",
          "description": "bFO ID of the related amendment opportunity (if any)"
        },
        "amendmentOpportunityStatus": {
          "type": "string",
          "description": "stage of the amendment opportunity (if any)"
        },
        "amendmentOpportunityStage": {
          "type": "string",
          "description": "stage of the amendment opportunity (if any)"
        },
        "hasServiceType": {
          "type": "array",
          "description": "Service Line is having included service with serviceType = serviceTypeFilter",
          "items": {
            "type": "string"
          }
        },
        "hideFromCustomerView": {
          "type": "boolean",
          "description": "Hide Contract from Customer view"
        }
      },
      "required": [
        "bfoId",
        "contractNumber",
        "siteName",
        "numberOfCoveredProducts",
        "startDate",
        "endDate",
        "status",
        "siteId",
        "installedAtAccountName",
        "installedAtAccountId"
      ]
    },
    "ContractDetails": {
      "title": "ContractDetails",
      "type": "object",
      "description": "Details of a service contract, including service lines",
      "properties": {
        "bfoId": {
          "type": "string",
          "description": "bFO ID of the Contract header",
          "example": "a287b000001ZvbgAAC"
        },
        "contractNumber": {
          "type": "string",
          "description": "Contract Number",
          "example": "Test Vale - Premium Contract"
        },
        "status": {
          "type": "string",
          "description": "Status of the contract header",
          "example": "Validated"
        },
        "soldToAccount": {
          "type": "object",
          "required": [
            "bfoId",
            "name"
          ],
          "properties": {
            "bfoId": {
              "type": "string",
              "example": "001A000000bJs5YIAS"
            },
            "name": {
              "type": "string",
              "example": "VALE - Headquarters"
            },
            "goldenId": {
              "type": "string"
            }
          }
        },
        "poNumber": {
          "type": "string",
          "description": "Purchase Order Number",
          "example": "12345678"
        },
        "startDate": {
          "type": "string",
          "description": "Start date of the contract header",
          "example": "2021-06-17"
        },
        "endDate": {
          "type": "string",
          "description": "End date of the contract header",
          "example": "2021-12-31"
        },
        "numberOfYear": {
          "type": "number",
          "description": "Number of Years",
          "example": 1
        },
        "serviceLines": {
          "type": "array",
          "description": "Service Lines (coverage of the contract per site)",
          "items": {
            "$ref": "#/definitions/ServiceLine"
          }
        },
        "active": {
          "type": "boolean",
          "description": "Is the contract active?"
        },
        "description": {
          "type": "string",
          "description": "High level description of the contact",
          "example": "Premium Contract"
        },
        "soldToContact": {
          "$ref": "#/definitions/ContractContact"
        },
        "price": {
          "type": "number",
          "description": "Contract price",
          "format": "float",
          "example": 100
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency Code",
          "example": "EUR - Euro"
        },
        "leadingBu": {
          "type": "string",
          "description": "Leading Business Unit",
          "example": "ENM DIGITAL ENERGY"
        },
        "evergreen": {
          "type": "boolean",
          "description": "Evergreen"
        },
        "sendCustomerRenewalNotification": {
          "type": "boolean",
          "description": "send Customer Renewal Notification"
        },
        "poDate": {
          "type": "string",
          "description": "Purchase Order Date",
          "example": "2021-06-17"
        },
        "billToAccount": {
          "type": "object",
          "description": "Bill to Account",
          "properties": {
            "bfoId": {
              "type": "string",
              "description": "bFO ID",
              "example": "001A000000bJs5YIAS"
            },
            "name": {
              "type": "string",
              "description": "Name",
              "example": "VALE - Headquarters"
            },
            "goldenId": {
              "type": "string",
              "description": "Golden ID"
            }
          },
          "required": [
            "bfoId",
            "name"
          ]
        },
        "billToContact": {
          "$ref": "#/definitions/ContractContact"
        },
        "initialOpportunityId": {
          "type": "string",
          "description": "bFO Id of the initial opportunity of this contract",
          "example": "0061H00000ZdXbJQAV"
        },
        "salesRepSesaId": {
          "type": "string",
          "description": "SESA ID of the Sales Rep",
          "example": "SESA520609"
        },
        "mainInstalledAtAccount": {
          "type": "object",
          "description": "Main Installed at Account of the contract",
          "properties": {
            "bfoId": {
              "type": "string",
              "description": "bFO ID",
              "example": "001A000000bJs5YIAS"
            },
            "name": {
              "type": "string",
              "description": "Name",
              "example": "VALE - Headquarters"
            },
            "goldenId": {
              "type": "string",
              "description": "Golden ID"
            }
          },
          "required": [
            "bfoId",
            "name"
          ]
        },
        "mainInstalledAtContact": {
          "$ref": "#/definitions/ContractContact"
        },
        "salesOrderNumber": {
          "type": "string",
          "description": "Sales Order Number in BO",
          "example": "705869695"
        },
        "cpqQuoteNumber": {
          "type": "string",
          "description": "CPQ Quote",
          "example": "705869234"
        },
        "renewedFrom": {
          "type": "string",
          "description": "Previous Contract Number",
          "example": "a287b000001ZvbgAAC"
        },
        "doNotRenew": {
          "type": "boolean",
          "description": "to prevent automatic renewal"
        },
        "renewalNotes": {
          "type": "string",
          "description": "Renewal notes",
          "example": "Contract renovated"
        },
        "cancellationDate": {
          "type": "string",
          "description": "Cancellation Date",
          "example": "2021-10-30"
        },
        "reasonForCancellation": {
          "type": "string",
          "description": "Reason for cancellation",
          "example": "Breach of contract"
        },
        "countryOfBo": {
          "type": "string",
          "description": "Country of Back Office",
          "example": "Spain"
        },
        "boSystem": {
          "type": "string",
          "description": "Back Office System",
          "example": "SAP Iberia"
        },
        "boReferenceHeader": {
          "type": "string",
          "description": "Back Office Reference Header",
          "example": "4061817"
        },
        "billingSchedule": {
          "type": "string",
          "description": "Billing Schedule",
          "example": "Annual"
        },
        "invoiceSchedule": {
          "type": "string",
          "description": "Invoice Schedule"
        },
        "invoiceOption": {
          "type": "string",
          "description": "Invoice Option",
          "example": "Actuals"
        },
        "renewalOpportunityId": {
          "type": "string",
          "description": "bFO ID of the related renewal opportunity (if any)",
          "example": "0061H00000ZdXbJQAV"
        },
        "renewalOpportunityStatus": {
          "type": "string",
          "description": "Status of the related renewal opportunity (if any)",
          "example": "Cancelled by Schneider"
        },
        "renewalOpportunityStage": {
          "type": "string",
          "description": "stage of the renewal opportunity (if any)",
          "example": "0 - Closed"
        },
        "amendmentOpportunityId": {
          "type": "string",
          "description": "bFO ID of the related amendment opportunity (if any)",
          "example": "0061H00000ZdXbJQAV"
        },
        "amendmentOpportunityStatus": {
          "type": "string",
          "description": "Status of the related amendment opportunity (if any)",
          "example": "Cancelled by Schneider"
        },
        "amendmentOpportunityStage": {
          "type": "string",
          "description": "stage of the amendment opportunity (if any)",
          "example": "0 - Closed"
        },
        "renewalOpportunityReference": {
          "type": "string",
          "description": "renewal Opportunity Reference",
          "example": "OP-180701-7496881"
        },
        "amendmentOpportunityReference": {
          "type": "string",
          "description": "Amendment Opportunity Reference",
          "example": "OP-180701-7496881"
        },
        "renewalOpportunityDetector": {
          "type": "string",
          "description": "Renewal Opportunity Detector User"
        },
        "renewalOpportunityCreationDate": {
          "type": "string",
          "description": "Renewal opportunity creation date ",
          "example": "2018-01-07"
        },
        "amendmentOpportunityCreationDate": {
          "type": "string",
          "description": "Amendment opportunity creation date ",
          "example": "2018-02-10"
        },
        "amendmentOpportunityDetector": {
          "type": "string",
          "description": "Amendment Opportunity Detector User"
        },
        "ownerSesaId": {
          "type": "string",
          "description": "Owner SESA ID",
          "example": "SESA520609"
        },
        "amendedFrom": {
          "type": "string",
          "description": "Previous Amended From Contract",
          "example": "a287b000001ZvbgAAC"
        },
        "createdByBoUser": {
          "type": "string",
          "description": "Created by Back Office User",
          "example": "0051H000009fThiQAE"
        },
        "lastModifiedByBoUser": {
          "type": "string",
          "description": "Last Modified by Back Office User",
          "example": "005A0000001pZz4IAE"
        },
        "boLastUpdateTimeStamp": {
          "type": "string",
          "description": "BO last update tmestamp",
          "example": "2021-08-18 3:47 PM"
        },
        "cancelledUserSesaId": {
          "type": "string",
          "description": "Cancelled by user (SESA ID)",
          "example": "SESA520609"
        },
        "requestCancellationUserSesaId": {
          "type": "string",
          "description": "Cancellation requested by user (SESA ID)",
          "example": "SESA520609"
        },
        "boBillToRecordId": {
          "type": "string",
          "description": "Back office Bill to account ID"
        },
        "syncLogMessage": {
          "type": "string",
          "description": "Synchronization Log Message",
          "example": "test"
        },
        "syncEvent": {
          "type": "string",
          "description": "Update event: IB-SYNC, VAL-SYNC, PCANC-SYNC"
        },
        "syncUpdate": {
          "type": "boolean",
          "description": "Sync Update Flag"
        },
        "quotationSystem": {
          "type": "string",
          "description": "Contract quoted in Quotation System",
          "example": "CPQ"
        },
        "quoteId": {
          "type": "string",
          "description": "Quote Technical ID"
        },
        "quoteConfigurationId": {
          "type": "string",
          "description": "Quote Configuration Technical ID"
        },
        "contractValueChainPlayers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractValueChainPlayer"
          }
        },
        "hideFromCustomerView": {
          "type": "boolean",
          "description": "Checkbox to Hide Contract from Customer view"
        },
        "pointEnabled": {
          "type": "boolean"
        },
        "pointBalance": {
          "type": "number"
        },
        "documentVaultId": {
          "type": "string"
        },
        "documentVaultStorage": {
          "type": "number"
        },
        "organization": {
          "type": "object",
          "properties": {
            "bfoId": {
              "type": "string",
              "example": "a1HA0000000O4Z5MAK"
            },
            "name": {
              "type": "string",
              "example": "Energy - Automation - Vaasa SAF Plant"
            }
          },
          "required": [
            "bfoId",
            "name"
          ]
        }
      },
      "required": [
        "bfoId",
        "contractNumber",
        "status",
        "soldToAccount",
        "startDate",
        "endDate",
        "numberOfYear",
        "serviceLines",
        "active",
        "price",
        "currencyCode",
        "evergreen",
        "pointEnabled"
      ]
    },
    "ServiceLine": {
      "title": "ServiceLine",
      "type": "object",
      "description": "Child line of a Service Contract",
      "properties": {
        "serviceLineId": {
          "type": "string",
          "description": "bFO ID of the Service Line"
        },
        "name": {
          "type": "string",
          "description": "Name of the service line"
        },
        "description": {
          "type": "string",
          "description": "Description of the service line"
        },
        "startDate": {
          "type": "string",
          "description": "Start date of the service line"
        },
        "endDate": {
          "type": "string",
          "description": "End date of the service line"
        },
        "numberOfCoveredProducts": {
          "type": "integer",
          "description": "Number of distinct covered assets"
        },
        "includedServices": {
          "type": "array",
          "description": "Detailed Entitlement (list of included services)",
          "items": {
            "$ref": "#/definitions/IncludedService"
          }
        },
        "coveredProducts": {
          "type": "array",
          "description": "List of covered Products (Assets or products)",
          "items": {
            "$ref": "#/definitions/CoveredProduct"
          }
        },
        "installedAtAccount": {
          "type": "object",
          "description": "Site where the coverage is applicable",
          "required": [
            "bfoId",
            "name"
          ],
          "properties": {
            "bfoId": {
              "type": "string",
              "description": "bFO ID of the installed at Account"
            },
            "name": {
              "type": "string",
              "description": "Account name"
            },
            "goldenId": {
              "type": "string",
              "description": "Golden ID"
            }
          }
        },
        "active": {
          "type": "boolean",
          "description": "Is the service line active?"
        },
        "skuComRef": {
          "type": "string",
          "description": "Service Commercial Reference"
        },
        "entitlement": {
          "type": "string",
          "description": "Entitlements"
        },
        "price": {
          "type": "number",
          "format": "float",
          "description": "Price of the line"
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of service"
        },
        "lineComment": {
          "type": "string",
          "description": "CPQ comment"
        },
        "reasonForCancellation": {
          "type": "string",
          "description": "Reason for cancellation"
        },
        "boReferenceLine": {
          "type": "string",
          "description": "Back Office Reference"
        },
        "unitPrice": {
          "type": "number",
          "description": "Unit Price"
        },
        "previousContractLineId": {
          "type": "string",
          "description": "bFO Id of the previous line (for renewal)"
        },
        "volumeDiscount": {
          "type": "number",
          "description": "Volume Discount"
        },
        "additionalDiscount": {
          "type": "number",
          "description": "Additional Discount"
        },
        "cpqQuoteNumber": {
          "type": "string",
          "description": "CPQ Quote Number"
        },
        "partsDiscount": {
          "type": "number",
          "description": "Parts Discount"
        },
        "laborDiscount": {
          "type": "number",
          "description": "Labor Discount"
        },
        "yearlyUnitPriceBeforeDiscount": {
          "type": "number",
          "description": "Yearly unit Price before discount"
        },
        "requestedPrice": {
          "type": "number",
          "description": "Requested Price"
        },
        "requestedPriceFlag": {
          "description": "Requested price flag",
          "type": "boolean"
        },
        "quantityOfYear": {
          "type": "number",
          "description": "Quantity of year"
        },
        "proRateApplied": {
          "type": "boolean",
          "description": "Pro rate"
        },
        "upLift": {
          "description": "up lift",
          "type": "number"
        },
        "discountValue": {
          "type": "number",
          "description": "Discount Value"
        },
        "discountType": {
          "type": "string",
          "description": "Discount type"
        },
        "initialDiscount": {
          "type": "number",
          "description": "Initial discount"
        },
        "cumulativeDiscount": {
          "type": "number",
          "description": "Cumulative discount"
        },
        "siteDetails": {
          "type": "object",
          "description": "Site location details",
          "properties": {
            "name": {
              "type": "string",
              "description": "Site location name"
            },
            "bfoId": {
              "type": "string",
              "description": "bFO ID of the site location"
            }
          }
        },
        "parentContractBoRef": {
          "type": "string"
        },
        "boLastUpdateTimeStamp": {
          "type": "string"
        },
        "schedulingUpgradeLineBoRef": {
          "type": "string"
        },
        "slaUpgradeLineBoRef": {
          "type": "string"
        },
        "renewedFromContractLineId": {
          "type": "string"
        },
        "syncLogMessage": {
          "type": "string"
        },
        "quoteLineId": {
          "type": "string",
          "description": "Quote line technical ID"
        },
        "hideFromCustomerView": {
          "type": "boolean",
          "description": "Hide Service line from customer view"
        },
        "doNotRenew": {
          "description": "If TRUE, Service Line won't be included in Renewal opportunity",
          "type": "boolean"
        },
        "isPremiumSupport": {
          "type": "boolean",
          "description": "Flagged to TRUE when SL includes at least one Premium Support feature"
        },
        "initialResponseTimeSla": {
          "type": "string",
          "description": "Initial Response Time SLA"
        },
        "fscBomId": {
          "type": "string",
          "description": "FSC BOM Id related to the Quote line "
        },
        "preventCaseSelection": {
          "type": "boolean"
        },
        "servicePlan": {
          "type": "object",
          "properties": {
            "servicePlanName": {
              "type": "string"
            },
            "servicePlanBfoId": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "serviceLineId",
        "name",
        "startDate",
        "endDate",
        "installedAtAccount",
        "quantity"
      ]
    },
    "IncludedService": {
      "title": "IncludedService",
      "type": "object",
      "description": "Individual Service include in the Service Line (entitlement)",
      "properties": {
        "includedServicedId": {
          "type": "string",
          "description": "bFO ID of the included service"
        },
        "name": {
          "type": "string",
          "description": "Name of the service"
        },
        "description": {
          "type": "string",
          "description": "Description of the service"
        },
        "digitalPlatform": {
          "type": "string",
          "description": "Digital Platform supporting the service when relevant"
        },
        "serviceType": {
          "type": "string",
          "description": "Type of entitlement (\"Installation, Premium Support, etc)"
        }
      },
      "required": [
        "includedServicedId",
        "name"
      ]
    },
    "CoveredProduct": {
      "title": "CoveredProduct",
      "type": "object",
      "description": "Asset covered under a Service Line",
      "properties": {
        "coveredProductId": {
          "type": "string",
          "description": "bFO ID of the covered Product",
          "example": "a1a1200000CQrppAAD"
        },
        "asset": {
          "$ref": "#/definitions/FieldService-Asset-Basic.v1"
        },
        "product": {
          "$ref": "#/definitions/FieldService-Product-Basic.v1"
        },
        "boReferenceLine": {
          "type": "string",
          "description": "Back Office Reference"
        },
        "shippedSerialNumber": {
          "type": "string",
          "description": "Shipped serial number"
        },
        "installedProductStartDate": {
          "type": "string"
        },
        "installedProductEndDate": {
          "type": "string"
        },
        "boReferenceCoveredProduct": {
          "type": "string"
        },
        "pduIpBfoId": {
          "type": "string"
        },
        "syncLogMessage": {
          "type": "string"
        },
        "accountDetails": {
          "$ref": "#/definitions/Field-Services-Account-Details.v1"
        },
        "hideFromCustomerView": {
          "type": "boolean",
          "description": "Checkbox to Hide record from customer portal"
        }
      },
      "required": [
        "coveredProductId"
      ]
    },
    "ContractDetailsResult": {
      "title": "ContractDetailsResult",
      "type": "object",
      "description": "Response payload of Contract details creation",
      "properties": {
        "bfoId": {
          "type": "string",
          "description": "bFO ID of the contract Header"
        },
        "boReference": {
          "type": "string",
          "description": "BO reference"
        },
        "boSystem": {
          "type": "string",
          "description": "BO System"
        },
        "serviceLines": {
          "type": "array",
          "description": "List of Service Lines",
          "items": {
            "$ref": "#/definitions/ServiceLineResult"
          }
        }
      },
      "required": [
        "bfoId",
        "boReference",
        "boSystem"
      ]
    },
    "ServiceLineResult": {
      "title": "ServiceLineResult",
      "type": "object",
      "description": "Response payload of Service Line creation",
      "properties": {
        "bfoId": {
          "type": "string",
          "description": "bFO ID"
        },
        "boReference": {
          "type": "string",
          "description": "BO Reference"
        },
        "coveredProducts": {
          "type": "array",
          "description": "List of covered products",
          "items": {
            "$ref": "#/definitions/CoveredProductResult"
          }
        }
      },
      "required": [
        "bfoId",
        "boReference"
      ]
    },
    "CoveredProductResult": {
      "title": "CoveredProductResult",
      "type": "object",
      "properties": {
        "bfoId": {
          "type": "string",
          "description": "bFO ID"
        },
        "boReference": {
          "type": "string"
        },
        "installedProductId": {
          "type": "string",
          "description": "IP bFO ID"
        },
        "installedProductSerialNumber": {
          "type": "string",
          "description": "IP Serial Number"
        },
        "installedProductGoldenId": {
          "type": "string",
          "description": "IP Golden ID"
        }
      },
      "required": [
        "bfoId",
        "boReference",
        "installedProductId",
        "installedProductSerialNumber",
        "installedProductGoldenId"
      ],
      "description": "Response payload of Covered Product"
    },
    "ContractCreationResult": {
      "title": "ContractCreationResult",
      "type": "object",
      "description": "",
      "properties": {
        "contractDetailsResult": {
          "$ref": "#/definitions/ContractDetailsResult"
        },
        "code": {
          "type": "string",
          "description": "Response code"
        },
        "message": {
          "type": "string",
          "description": "Response message"
        }
      },
      "required": [
        "contractDetailsResult",
        "code",
        "message"
      ]
    },
    "ContractContact": {
      "title": "ContractContact",
      "type": "object",
      "description": "Model to support Contact information",
      "properties": {
        "bfoId": {
          "type": "string",
          "example": "0031200001jfOtEAAU"
        },
        "firstName": {
          "type": "string",
          "example": "Pierre"
        },
        "lastName": {
          "type": "string",
          "example": "Paul"
        },
        "goldenId": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string",
          "example": "thomas.cognat@se.com"
        },
        "workPhone": {
          "type": "string"
        },
        "localFirstName": {
          "type": "string"
        },
        "localLastName": {
          "type": "string"
        },
        "localMiddleInitial": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "middleInitial": {
          "type": "string"
        }
      },
      "required": [
        "bfoId",
        "firstName",
        "lastName"
      ]
    },
    "ContractValueChainPlayer": {
      "title": "ContractValueChainPlayer",
      "type": "object",
      "description": "ContractValueChainPlayer (CVCP) related to a Contract",
      "properties": {
        "id": {
          "type": "string",
          "description": "bFO ID",
          "example": "a3o7b000000AnnSAAS"
        },
        "name": {
          "type": "string",
          "description": "CVCP Name",
          "example": "CVCP-550991"
        },
        "legacyBeneficiaryId": {
          "type": "string",
          "description": "Legacy Beneficiary Id"
        },
        "isMasterPin": {
          "type": "boolean",
          "description": "is Master PIN"
        },
        "legacyPin": {
          "type": "string",
          "description": "Legacy PIN"
        },
        "contact": {
          "$ref": "#/definitions/ContractContact"
        },
        "contactRole": {
          "type": "string",
          "description": "Contact Role",
          "example": "Admin"
        }
      },
      "required": [
        "id",
        "name",
        "contact",
        "contactRole"
      ]
    },
    "ContractValueChainPlayerPutResults": {
      "title": "ContractValueChainPlayerPutResults",
      "type": "object",
      "description": "",
      "properties": {
        "cvcpBfoId": {
          "type": "string",
          "example": "a3o7b000000Ard2AAC"
        },
        "contactBfoId": {
          "type": "string",
          "example": "0037b00000rOwiZAAS"
        },
        "accountBfoId": {
          "type": "string",
          "example": "001A000000v4CEEIA2"
        },
        "accountRole": {
          "type": "string",
          "example": "Agent"
        },
        "contactRole": {
          "type": "string",
          "example": "Admin"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "getcontractValueChainPlayer-Response": {
      "title": "getcontractValueChainPlayer-Response",
      "type": "object",
      "properties": {
        "contractValueChainPlayerId": {
          "type": "string",
          "example": "a3o7b000000Ard2AAC"
        },
        "name": {
          "type": "string",
          "example": "CVCP-551230"
        },
        "contactId": {
          "type": "string",
          "example": "0037b00000rOwiZAAS"
        },
        "contactName": {
          "type": "string",
          "example": "TestUser UATBR"
        },
        "contactEmail": {
          "type": "string",
          "example": "testuser.uatbr@yopmail.com"
        },
        "contactRole": {
          "type": "string",
          "example": "Admin"
        },
        "caseAccess": {
          "type": "string",
          "example": "All Cases"
        },
        "documentVaultDefaultRole": {
          "type": "string"
        },
        "pointLimit": {
          "type": "integer"
        },
        "beneficiaryPointBalance": {
          "type": "integer",
          "example": 100
        },
        "premiumSupportAccessRequest": {
          "type": "string"
        },
        "maximumNumberofBeneficiaries": {
          "type": "integer",
          "example": 100
        }
      }
    },
    "ContractValueChainPlayer-Post-Response": {
      "title": "ContractValueChainPlayer-Post-Response",
      "type": "object",
      "description": "ContractValueChainPlayer (CVCP) Create Response related to a Contract",
      "properties": {
        "contractValueChainPlayerId": {
          "type": "string",
          "example": "a3o7b000000AnnSAAS"
        },
        "contractValueChainPlayerName": {
          "type": "string",
          "example": "CVCP-550991"
        },
        "resultCode": {
          "type": "string"
        },
        "resultMessage": {
          "type": "string"
        }
      }
    },
    "ErrorResponse_2": {
      "type": "object",
      "title": "Error Response - OAS2",
      "description": "Error response returned to the consumer when an HTTP error status has occurred.",
      "properties": {
        "code": {
          "type": "string",
          "example": "MISSING_FIELD or 12345",
          "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
        },
        "userMessage": {
          "type": "string",
          "example": "Required field is missing: productSku",
          "description": "Human-readable general description of the error."
        },
        "developerMessage": {
          "type": "string",
          "description": "Optional human-readable description of the error details.",
          "example": "Product master API ParseException: required tag <sku> expected"
        },
        "moreInfo": {
          "type": "string",
          "description": "Optional link to error documentation, which has more information about the error.",
          "format": "uri",
          "example": "https://example.com/product-master/v1/error/12345"
        }
      },
      "required": [
        "code",
        "userMessage"
      ]
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error Response - OAS2",
      "description": "Error response returned to the consumer when an HTTP error status has occurred.",
      "properties": {
        "code": {
          "type": "string",
          "example": "MISSING_FIELD or 12345",
          "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
        },
        "userMessage": {
          "type": "string",
          "example": "Required field is missing: productSku",
          "description": "Human-readable general description of the error."
        },
        "developerMessage": {
          "type": "string",
          "description": "Optional human-readable description of the error details.",
          "example": "Product master API ParseException: required tag <sku> expected"
        },
        "moreInfo": {
          "type": "string",
          "description": "Optional link to error documentation, which has more information about the error.",
          "format": "uri",
          "example": "https://example.com/product-master/v1/error/12345"
        }
      },
      "required": [
        "code",
        "userMessage"
      ]
    },
    "Field-Service-Contract-Value-Chain-Player_m3296": {
      "title": "Field-Service-Contract-Value-Chain-Player",
      "type": "object",
      "description": "",
      "examples": [
        {
          "contractValueChainPlayerId": "a3o7b000000AnnSAAS",
          "contractValueChainPlayerName": "CVCP-550991",
          "serviceContractId": "a287b000001ZvbgAAC",
          "serviceContractName": "Test Vale - Premium Contract",
          "contactId": "0037b00000qX81wAAC",
          "contactRole": "No Access",
          "contactPhone": "string",
          "contactEmail": "testappbookcontact@yopmail.com",
          "contactName": "Test User 2 UAT BR",
          "caseAccess": "My Cases",
          "documentVaultAccess": "No Access",
          "pointLimit": 1,
          "premiumSupportAccessRequest": "Requested",
          "legacyBeneficiaryId": "string",
          "masterPin": true,
          "legacyPin": "string",
          "accountId": "001A000000bJs5YIAS",
          "accountName": "VALE - Headquarters",
          "accountRole": "Agent",
          "beneficiaryPointBalance": 0
        }
      ],
      "properties": {
        "serviceContractId": {
          "type": "string",
          "example": "a287b000001ZvbgAAC",
          "description": "ID reference of a Service contract linked to a CVCP record"
        },
        "contactId": {
          "type": "string",
          "example": "0037b00000qX81wAAC",
          "description": "ID reference of a Contact on the CVCP record"
        },
        "contactRole": {
          "type": "string",
          "description": "Defines the role of a Contact on CVCP record",
          "enum": [
            "No Access",
            "Account Manager",
            "Admin",
            "Beneficiary",
            "Business Development Specialist",
            "Consultant",
            "Contract Admin",
            "Decision Maker",
            "Executive",
            "Financial Buyer",
            "Inside Sales",
            "Internal Enabler",
            "IT Manager",
            "Onsite Engineer",
            "Operational end user",
            "Outside Sales",
            "Political Influencer",
            "Primary Partner Contact",
            "Primary User",
            "Solution Sales Engineer",
            "Subject Matter Expert"
          ]
        },
        "caseAccess": {
          "type": "string",
          "enum": [
            "My Cases",
            "My Account Cases",
            "All Contract Cases",
            "No Access"
          ],
          "description": "Defines the case visibility for Premium Support"
        },
        "pointLimit": {
          "type": "integer",
          "example": 1
        },
        "premiumSupportAccessRequest": {
          "type": "string",
          "enum": [
            "Requested",
            "In Progress",
            "Completed",
            "Failed",
            "Rejected"
          ],
          "description": "Defines the status of the Premium Support access request"
        }
      }
    },
    "Field-Service-Contract-Value-Chain-Player_m3429": {
      "title": "Field-Service-Contract-Value-Chain-Player",
      "type": "object",
      "description": "",
      "examples": [
        {
          "contractValueChainPlayerId": "a3o7b000000AnnSAAS",
          "contractValueChainPlayerName": "CVCP-550991",
          "serviceContractId": "a287b000001ZvbgAAC",
          "serviceContractName": "Test Vale - Premium Contract",
          "contactId": "0037b00000qX81wAAC",
          "contactRole": "No Access",
          "contactPhone": "string",
          "contactEmail": "testappbookcontact@yopmail.com",
          "contactName": "Test User 2 UAT BR",
          "caseAccess": "My Cases",
          "documentVaultAccess": "No Access",
          "pointLimit": 1,
          "premiumSupportAccessRequest": "Requested",
          "legacyBeneficiaryId": "string",
          "masterPin": true,
          "legacyPin": "string",
          "accountId": "001A000000bJs5YIAS",
          "accountName": "VALE - Headquarters",
          "accountRole": "Agent",
          "beneficiaryPointBalance": 0
        }
      ],
      "properties": {
        "contractValueChainPlayerId": {
          "type": "string",
          "description": "ID reference of a CVCP record in bFO",
          "example": "a3o7b000000AnnSAAS"
        },
        "serviceContractId": {
          "type": "string",
          "example": "a287b000001ZvbgAAC",
          "description": "ID reference of a Service contract linked to a CVCP record"
        },
        "contactId": {
          "type": "string",
          "example": "0037b00000qX81wAAC",
          "description": "ID reference of a Contact on the CVCP record"
        },
        "contactRole": {
          "type": "string",
          "description": "Defines the role of a Contact on CVCP record",
          "enum": [
            "No Access",
            "Account Manager",
            "Admin",
            "Beneficiary",
            "Business Development Specialist",
            "Consultant",
            "Contract Admin",
            "Decision Maker",
            "Executive",
            "Financial Buyer",
            "Inside Sales",
            "Internal Enabler",
            "IT Manager",
            "Onsite Engineer",
            "Operational end user",
            "Outside Sales",
            "Political Influencer",
            "Primary Partner Contact",
            "Primary User",
            "Solution Sales Engineer",
            "Subject Matter Expert"
          ]
        },
        "caseAccess": {
          "type": "string",
          "enum": [
            "My Cases",
            "My Account Cases",
            "All Contract Cases",
            "No Access"
          ],
          "description": "Defines the case visibility for Premium Support"
        },
        "pointLimit": {
          "type": "integer",
          "example": 1
        },
        "premiumSupportAccessRequest": {
          "type": "string",
          "enum": [
            "Requested",
            "In Progress",
            "Completed",
            "Failed",
            "Rejected"
          ],
          "description": "Defines the status of the Premium Support access request"
        }
      }
    },
    "Field-Service-Contract-Value-Chain-Player_m3464": {
      "title": "Field-Service-Contract-Value-Chain-Player",
      "type": "object",
      "description": "",
      "examples": [
        {
          "contractValueChainPlayerId": "a3o7b000000AnnSAAS",
          "contractValueChainPlayerName": "CVCP-550991",
          "serviceContractId": "a287b000001ZvbgAAC",
          "serviceContractName": "Test Vale - Premium Contract",
          "contactId": "0037b00000qX81wAAC",
          "contactRole": "No Access",
          "contactPhone": "string",
          "contactEmail": "testappbookcontact@yopmail.com",
          "contactName": "Test User 2 UAT BR",
          "caseAccess": "My Cases",
          "documentVaultAccess": "No Access",
          "pointLimit": 1,
          "premiumSupportAccessRequest": "Requested",
          "legacyBeneficiaryId": "string",
          "masterPin": true,
          "legacyPin": "string",
          "accountId": "001A000000bJs5YIAS",
          "accountName": "VALE - Headquarters",
          "accountRole": "Agent",
          "beneficiaryPointBalance": 0
        }
      ],
      "properties": {
        "serviceContractId": {
          "type": "string",
          "example": "a287b000001ZvbgAAC",
          "description": "ID reference of a Service contract linked to a CVCP record"
        },
        "contactId": {
          "type": "string",
          "example": "0037b00000qX81wAAC",
          "description": "ID reference of a Contact on the CVCP record"
        },
        "contactRole": {
          "type": "string",
          "description": "Defines the role of a Contact on CVCP record",
          "enum": [
            "No Access",
            "Account Manager",
            "Admin",
            "Beneficiary",
            "Business Development Specialist",
            "Consultant",
            "Contract Admin",
            "Decision Maker",
            "Executive",
            "Financial Buyer",
            "Inside Sales",
            "Internal Enabler",
            "IT Manager",
            "Onsite Engineer",
            "Operational end user",
            "Outside Sales",
            "Political Influencer",
            "Primary Partner Contact",
            "Primary User",
            "Solution Sales Engineer",
            "Subject Matter Expert"
          ]
        },
        "caseAccess": {
          "type": "string",
          "enum": [
            "My Cases",
            "My Account Cases",
            "All Contract Cases",
            "No Access"
          ],
          "description": "Defines the case visibility for Premium Support"
        },
        "pointLimit": {
          "type": "integer",
          "example": 1
        },
        "premiumSupportAccessRequest": {
          "type": "string",
          "enum": [
            "Requested",
            "In Progress",
            "Completed",
            "Failed",
            "Rejected"
          ],
          "description": "Defines the status of the Premium Support access request"
        }
      }
    },
    "Field-Service-Contract-Value-Chain-Player": {
      "title": "Field-Service-Contract-Value-Chain-Player",
      "type": "object",
      "description": "",
      "examples": [
        {
          "contractValueChainPlayerId": "a3o7b000000AnnSAAS",
          "contractValueChainPlayerName": "CVCP-550991",
          "serviceContractId": "a287b000001ZvbgAAC",
          "serviceContractName": "Test Vale - Premium Contract",
          "contactId": "0037b00000qX81wAAC",
          "contactRole": "No Access",
          "contactPhone": "string",
          "contactEmail": "testappbookcontact@yopmail.com",
          "contactName": "Test User 2 UAT BR",
          "caseAccess": "My Cases",
          "documentVaultAccess": "No Access",
          "pointLimit": 1,
          "premiumSupportAccessRequest": "Requested",
          "legacyBeneficiaryId": "string",
          "masterPin": true,
          "legacyPin": "string",
          "accountId": "001A000000bJs5YIAS",
          "accountName": "VALE - Headquarters",
          "accountRole": "Agent",
          "beneficiaryPointBalance": 0
        }
      ],
      "properties": {
        "contractValueChainPlayerId": {
          "type": "string",
          "description": "ID reference of a CVCP record in bFO",
          "example": "a3o7b000000AnnSAAS"
        },
        "contractValueChainPlayerName": {
          "type": "string",
          "description": "Name of a CVCP record in bFO",
          "example": "CVCP-550991"
        },
        "serviceContractId": {
          "type": "string",
          "example": "a287b000001ZvbgAAC",
          "description": "ID reference of a Service contract linked to a CVCP record"
        },
        "serviceContractName": {
          "type": "string",
          "example": "Test Vale - Premium Contract",
          "description": "Name of the Service contract linked to a CVCP record"
        },
        "contactId": {
          "type": "string",
          "example": "0037b00000qX81wAAC",
          "description": "ID reference of a Contact on the CVCP record"
        },
        "contactRole": {
          "type": "string",
          "description": "Defines the role of a Contact on CVCP record",
          "enum": [
            "No Access",
            "Account Manager",
            "Admin",
            "Beneficiary",
            "Business Development Specialist",
            "Consultant",
            "Contract Admin",
            "Decision Maker",
            "Executive",
            "Financial Buyer",
            "Inside Sales",
            "Internal Enabler",
            "IT Manager",
            "Onsite Engineer",
            "Operational end user",
            "Outside Sales",
            "Political Influencer",
            "Primary Partner Contact",
            "Primary User",
            "Solution Sales Engineer",
            "Subject Matter Expert"
          ]
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of the Contact linked to the CVCP record"
        },
        "contactEmail": {
          "type": "string",
          "description": "Email address of the Contact linked to the CVCP record",
          "example": "testappbookcontact@yopmail.com"
        },
        "contactName": {
          "type": "string",
          "example": "Test User 2 UAT BR",
          "description": "Name of the Contact linked to a CVCP record"
        },
        "caseAccess": {
          "type": "string",
          "enum": [
            "My Cases",
            "My Account Cases",
            "All Contract Cases",
            "No Access"
          ],
          "description": "Defines the case visibility for Premium Support"
        },
        "documentVaultAccess": {
          "type": "string",
          "enum": [
            "No Access",
            "Reader",
            "Editor",
            "Owner"
          ],
          "description": "Defines the user's level of access on the document vault"
        },
        "pointLimit": {
          "type": "integer",
          "example": 1
        },
        "premiumSupportAccessRequest": {
          "type": "string",
          "enum": [
            "Requested",
            "In Progress",
            "Completed",
            "Failed",
            "Rejected"
          ],
          "description": "Defines the status of the Premium Support access request"
        },
        "legacyBeneficiaryId": {
          "type": "string",
          "description": "Stores the Vantive Id"
        },
        "masterPin": {
          "type": "boolean"
        },
        "legacyPin": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "example": "001A000000bJs5YIAS",
          "description": "ID reference of an Account record in bFO"
        },
        "accountName": {
          "type": "string",
          "description": "Name of the Account record in bFO",
          "example": "VALE - Headquarters"
        },
        "accountRole": {
          "type": "string",
          "description": "Defines the role of the Account linked to the CVCP",
          "enum": [
            "Agent",
            "Architect",
            "Consultant",
            "Delegated as Primary",
            "Distributors / Resellers",
            "Electrical Contractor",
            "EPC",
            "Fulfillment Channel",
            "General Contractor",
            "Lead Finder",
            "OEM",
            "Panel Builders",
            "Specifier",
            "Subcontractor",
            "System Integrator",
            "Vendor"
          ]
        },
        "beneficiaryPointBalance": {
          "type": "integer"
        }
      }
    },
    "Field-Services-Account-Details.v1": {
      "title": "Field Services - Account - Details",
      "type": "object",
      "properties": {
        "installedAtAccountId": {
          "type": "string",
          "example": "001A00000190oTpIAI"
        },
        "name": {
          "type": "string"
        },
        "localName": {
          "type": "string"
        },
        "street": {
          "type": "string",
          "example": "boulevard lefebvre"
        },
        "streetLocalLanguage": {
          "type": "string"
        },
        "additionalAddress": {
          "type": "string"
        },
        "localAdditionalAdress": {
          "type": "string"
        },
        "zipCode": {
          "type": "string",
          "example": "75018"
        },
        "city": {
          "type": "string",
          "example": "Paris"
        },
        "localCity": {
          "type": "string"
        },
        "countryCode": {
          "type": "string",
          "example": "FR"
        },
        "stateProvinceCode": {
          "type": "string"
        }
      }
    },
    "FieldService-Asset-Basic.v1": {
      "title": "Field Services - Asset - Basic structure",
      "type": "object",
      "description": "",
      "properties": {
        "connectedAttributes": {
          "type": "object",
          "description": "Contains all connectivity related attributes of the installed product",
          "properties": {
            "connected": {
              "type": "string",
              "description": "true, false",
              "enum": [
                "true",
                "false"
              ],
              "example": "true"
            }
          }
        },
        "underContract": {
          "type": "boolean",
          "description": "True if the installed Product is covered by any kind of service contract (Warrenty extension, Maintenance, ...)"
        },
        "serialNumber": {
          "description": "manufacturingacturing serial number of the asset. This attribute is used for Schneider manufacturingactured assets. This attribute is used to identify duplicate assets.Functional rule is to not push via automated connectors assets with no serial numbers if the source system is not enabling Schneider to consider the asset as tracked effectively (i.e. if the asset is a result of tracking assumption).",
          "example": "ZA0735003884",
          "type": "string"
        },
        "standardSerialNumber": {
          "description": "to be defined ",
          "example": "to be defined",
          "type": "string"
        },
        "manufacturingDate": {
          "type": "string",
          "description": "Date of product manufacture ( i.e. date code)",
          "format": "date"
        },
        "note": {
          "description": "Any note or comment related to asset description. ",
          "example": "This is an example of note",
          "type": "string"
        },
        "version": {
          "description": "Version of the product ",
          "example": "5",
          "type": "string"
        },
        "warrantyEndDate": {
          "type": "string",
          "description": "end date of the warranty",
          "format": "date",
          "example": "2019-02-26"
        },
        "warrantyStartDate": {
          "type": "string",
          "description": "start date of the warranty",
          "format": "date",
          "example": "2018-02-27"
        },
        "withdrawalDate": {
          "type": "string",
          "description": "Life cycle information : The date that the planned service obsolescense was announced",
          "format": "date",
          "example": "2018-02-26"
        },
        "shipDate": {
          "type": "string",
          "description": "the date the asset was shipped to an outside group customer. This date is used for Warranty date calculation.",
          "format": "date",
          "example": "2019-04-17"
        },
        "installationDate": {
          "type": "string",
          "description": "customer acceptance date of the installationlation",
          "format": "date",
          "example": "2014-07-01"
        },
        "assetDescription": {
          "description": "description of the asset in latin caracters : Free text field to describe the installed product",
          "example": "E3LB PDU Rack 06",
          "type": "string"
        },
        "externalReferences": {
          "type": "object",
          "description": "Contains all customer specific reference which could be different from the ones maintained by Schneider-Electric",
          "properties": {
            "customerAssetReference": {
              "type": "string",
              "description": "Commercial referenceerence of the asset when the asset is marketed by a third party entity with its own commercial reference.- Customer commercial reference given by OEM customer or indirect customer- Other manufacturingacturer commercial reference to be defined",
              "example": "BREAKER-XAZE"
            },
            "customerAssetDescription": {
              "type": "string",
              "description": "to be defithe referenceerence or identification number or name the customer is using to identify this asset within its own installationled base.",
              "example": "123456"
            },
            "customerAssetSerialNumber": {
              "type": "string",
              "description": "to be definedWhen the asset is identified with a serial number which is not the Schneider manufacturingactured serial number - serial number provided by the OEM customer or indirect customer - Serial number of the product Schneider buys from other manufacturingacturers- manufacturingacturing Serial number of the product when not a Schneider manufacturingactured product (competition).This attribute is used to identify duplicate assets.",
              "example": "00003N1905510108"
            }
          }
        },
        "name": {
          "type": "string",
          "description": "name of the asset in latin caracters : Free text field"
        },
        "schneiderAssetId": {
          "type": "string",
          "description": "Golden ID of the Asset"
        },
        "parentAssetId": {
          "type": "string",
          "description": "publisher ID of the parent of the installed product"
        },
        "estimatedEndOfLifeDate": {
          "type": "string",
          "description": "Exposed to customer - Estimated end date of the useful life for the asset."
        },
        "purchasedDate": {
          "type": "string",
          "description": "the date the customer declares to have purchased the asset (with  a proof of purchase).  This date is used for Warranty date calculation.",
          "format": "date"
        },
        "decommissioningDate": {
          "type": "string",
          "description": "publisher ID of the installed product",
          "format": "date"
        },
        "assetId": {
          "type": "string",
          "description": "publisher ID of the installed product"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "version of the firmware installed on the asset"
        },
        "quantity": {
          "type": "integer",
          "description": "quantity of the asset if relevant"
        },
        "usageStatus": {
          "type": "string",
          "description": "life cycle status of the installed product"
        },
        "lifeCycleStatus": {
          "type": "string",
          "example": "Scrapped",
          "enum": [
            "Scrapped",
            "In Supply Chain",
            "At Customer Location - Not Used",
            "Commissioned / In Use",
            "Removed for Repair",
            "Lost or Stolen"
          ],
          "description": "Represent the life cycle Status of the Installed Product, is it Commissioned/ In Use or scrapped etc."
        },
        "hideFromCustomerView": {
          "type": "boolean",
          "description": "Hide Asset from Customer View"
        }
      }
    },
    "FieldService-Product-Basic.v1": {
      "title": "Field Services - Product - Basic structure",
      "type": "object",
      "description": "",
      "properties": {
        "deviceType": {
          "type": "string",
          "description": "Type code from the SE product catalogue taxonomy   for this asset. It identifies, independently of branding, naming , the asset device type (i.e : is the asset a circuit-breaket or a washing machine?).",
          "example": "DEVTYP000174"
        },
        "range": {
          "type": "string",
          "description": "ID of the category. The asset category identifies the Range of this asset . As such it identifies which part of the SE Catalogue this asset belongs to. It is applicable to Schneider assets as well as competition assets. This attribute is used to identify duplicate assets.",
          "example": "63545"
        },
        "brand": {
          "type": "string",
          "description": "ID of the Brand of asset\n"
        },
        "productPyramid": {
          "title": "Field-Service-ProductPyramid-Basic.v1",
          "type": "object",
          "description": "",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "businessUnit": {
              "type": "string"
            },
            "productLine": {
              "type": "string"
            },
            "productFamily": {
              "type": "string"
            },
            "family": {
              "type": "string"
            },
            "subFamily": {
              "type": "string"
            },
            "series": {
              "type": "string"
            },
            "GDP": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "GDP"
          ]
        }
      }
    }
  },
  "basePath": "/v3/customer-order/field-service/service-contract",
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "application",
      "scopes": {},
      "tokenUrl": "https://api.qa.se.com/token"
    }
  }
}