{
    "info": {
        "_postman_id": "a820e662-0daa-4ff2-a8aa-b1656a8081c0",
        "name": "DQ Result processed",
        "description": "Rest API for geting DQ Results from Reltio\n\nContact Support:\n Name: Rushika Raiyani\n Email: rushika.raiyani@se.com",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "DT-A-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "{{token}}",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v1/reference-data/dq-result/entities?type=Organization&recordid=001A000000Ze5HUIAZ&targetsystem=US_Q2CB",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v1",
                        "reference-data",
                        "dq-result",
                        "entities"
                    ],
                    "query": [
                        {
                            "key": "type",
                            "value": "Organization"
                        },
                        {
                            "key": "recordid",
                            "value": "001A000000Ze5HUIAZ"
                        },
                        {
                            "key": "targetsystem",
                            "value": "US_Q2CB"
                        }
                    ]
                },
                "description": "Retrieve the information of the record for any DQC"
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-A-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "{{token}}",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v1/reference-data/dq-result/entities?type=Organization&recordid=001A000000Ze5HUIAZ&targetsystem=US_Q2CB",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v1",
                        "reference-data",
                        "dq-result",
                        "entities"
                    ],
                    "query": [
                        {
                            "key": "type",
                            "value": "Organization"
                        },
                        {
                            "key": "recordid",
                            "value": "001A000000Ze5HUIAZ"
                        },
                        {
                            "key": "targetsystem",
                            "value": "US_Q2CB"
                        }
                    ]
                },
                "description": "Retrieve the information of the record for any DQC"
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.be.ok;\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"array\",\n \"description\": \"\",\n \"minItems\": 1,\n \"uniqueItems\": true,\n \"items\": {\n  \"type\": \"object\",\n  \"properties\": {\n   \"ruleId\": {\n    \"type\": \"string\",\n    \"minLength\": 1\n   },\n   \"ruleLabel\": {\n    \"type\": \"string\",\n    \"minLength\": 1\n   },\n   \"ruleSeverity\": {\n    \"type\": \"string\",\n    \"minLength\": 1\n   },\n   \"ruleCategory\": {\n    \"type\": \"string\",\n    \"minLength\": 1\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in request\", () => {\r",
                            "\r",
                            "  pm.request.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is application/json in Request\", () => {\r",
                            "\r",
                            "  pm.expect(pm.request.headers.get('Content-Type')).to.eql(\"application/json\");\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-A-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "{{token}}",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v1/reference-data/dq-result/entities?type=Organization&recordid=001A000000Ze5HUIAZ&targetsystem=US_Q2CB",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v1",
                        "reference-data",
                        "dq-result",
                        "entities"
                    ],
                    "query": [
                        {
                            "key": "type",
                            "value": "Organization"
                        },
                        {
                            "key": "recordid",
                            "value": "001A000000Ze5HUIAZ"
                        },
                        {
                            "key": "targetsystem",
                            "value": "US_Q2CB"
                        }
                    ]
                },
                "description": "Retrieve the information of the record for any DQC"
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-A-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "{{token}}",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v1/reference-data/dq-result/entities?type=Organization&recordid=001A000000Ze5HUIAZ&targetsystem=US_Q2CB",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v1",
                        "reference-data",
                        "dq-result",
                        "entities"
                    ],
                    "query": [
                        {
                            "key": "type",
                            "value": "Organization"
                        },
                        {
                            "key": "recordid",
                            "value": "001A000000Ze5HUIAZ"
                        },
                        {
                            "key": "targetsystem",
                            "value": "US_Q2CB"
                        }
                    ]
                },
                "description": "Retrieve the information of the record for any DQC"
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-A-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "{{token}}",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v1/reference-data/dq-result/entities?type=Organization&recordid=001A000000Ze5HUIAZ&targetsystem=US_Q2CB",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v1",
                        "reference-data",
                        "dq-result",
                        "entities"
                    ],
                    "query": [
                        {
                            "key": "type",
                            "value": "Organization"
                        },
                        {
                            "key": "recordid",
                            "value": "001A000000Ze5HUIAZ"
                        },
                        {
                            "key": "targetsystem",
                            "value": "US_Q2CB"
                        }
                    ]
                },
                "description": "Retrieve the information of the record for any DQC"
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        }
    ],
    "auth": {
        "type": "oauth2"
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "https://api.qa.se.com/v1/reference-data/dq-result",
            "type": "string"
        }
    ]
}