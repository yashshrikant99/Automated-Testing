{
    "info": {
        "_postman_id": "a7afbb0b-4f74-4f35-a0f8-8d67542d3d83",
        "name": "UnifiedDataLayer-Product-V2 processed",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "DT-A-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-generaldetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-generaldetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-A-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-generaldetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-generaldetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('List of products with general attributes');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"object\",\n \"properties\": {\n  \"products\": {\n   \"type\": \"array\",\n   \"items\": {\n    \"type\": \"object\",\n    \"title\": \"productGeneralDetails\",\n    \"description\": \"This model contains attributes specific to General View of Product Data\",\n    \"properties\": {\n     \"productReference\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"SE Product Reference ID\",\n      \"example\": \"A9F95170\"\n     },\n     \"productDescription\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Short description of the product in EN language\",\n      \"example\": \"ACTI9IC60L1P05AKCIRCUIT\"\n     },\n     \"baseIsoUom\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Base Unit of Measure defined Globally\",\n      \"example\": \"PCE\"\n     },\n     \"productHierarchy\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Product Hierarchy as defined for the Commercial Reference\",\n      \"example\": \"0QSQ\"\n     },\n     \"eanNumber\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"EAN Number of the product\",\n      \"example\": \"LG360648008475\"\n     },\n     \"eanCategory\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"EAN Category of the product\"\n     },\n     \"publisherCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Publisher (system) of this product data in UDL. For the list of publishers, please reach out to DDH/IntelDS team.\",\n      \"example\": \"SAPSNB\"\n     },\n     \"productUpdatedOn\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Date when this Product record is updated on\",\n      \"format\": \"date\"\n     },\n     \"crossPlantStatus\": {\n      \"description\": \"Statuskod (D-chain) Status of the Product\",\n      \"type\": \"object\",\n      \"properties\": {\n       \"crossPlantStatusId\": {\n        \"type\":[\"string\",\"null\"],\n        \"description\": \"CrossPlant Status ID (Commercial Status ID)\"\n       },\n       \"crossPlantStatusDescription\": {\n        \"type\":[\"string\",\"null\"],\n        \"description\": \"Cross Plant Status Description (Commercial Status Description)\"\n       }\n      }\n     },\n     \"localLangProductDescription\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Product Short Description in local language requested in the API operation\"\n     },\n     \"gdp\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"GDP of Product\",\n      \"example\": \"3802\"\n     },\n     \"productGoldenReference\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"SE Golden ID of Product\",\n      \"example\": \"1029378\"\n     },\n     \"baseTechnicalUom\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Base UoM Defined by the Country\",\n      \"example\": \"EA\"\n     },\n     \"globalGdp\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"GDP published by SDH publisher\",\n      \"example\": \"304999\"\n     },\n     \"longTail\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"o2CampaignYear\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"o2ltPerimeter\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"notSoldAloneFlag\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"erpTypology\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"baseCommercialUom\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"soldConfigProduct\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"o2ItLobDecisionStatus\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"maxUdlBatchUpdate\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"offerManager\": {\n      \"type\":[\"string\",\"null\"]\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-A-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-generaldetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-generaldetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-A-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-generaldetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-generaldetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-A-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-generaldetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-generaldetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-B-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-salesdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-salesdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-B-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-salesdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-salesdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('List of products with sales data attributes');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"array\",\n \"items\": {\n  \"type\": \"object\",\n  \"properties\": {\n   \"products\": {\n    \"type\": \"array\",\n    \"description\": \"List of Products with Sales Info\",\n    \"items\": {\n     \"type\": \"object\",\n     \"title\": \"productSalesDetails\",\n     \"description\": \"This model contains attributes specific to Sales View of Product Data\",\n     \"properties\": {\n      \"publisherCode\": {\n       \"type\":[\"string\",\"null\"],\n       \"description\": \"Publisher (system) of this record in UDL. For the list of publishers, please reach out to DDH/IntelDS team.\",\n       \"example\": \"SAPSNB\"\n      },\n      \"productReference\": {\n       \"type\":[\"string\",\"null\"],\n       \"description\": \"SE Product Reference ID (CR)\",\n       \"example\": \"028766SE\"\n      },\n      \"salesOrganization\": {\n       \"type\":[\"string\",\"null\"],\n       \"description\": \"SE Product Reference ID (CR)\",\n       \"example\": \"BH01\"\n      },\n      \"distributionChannel\": {\n       \"type\": \"object\",\n       \"properties\": {\n        \"distributionChannelId\": {\n         \"type\":[\"string\",\"null\"],\n         \"description\": \"SE Distribution Channel\",\n         \"example\": \"01\"\n        },\n        \"distributionChannelDescription\": {\n         \"type\":[\"string\",\"null\"],\n         \"description\": \"SE Distribution Channel Description\"\n        }\n       }\n      },\n      \"crossDistributionChain\": {\n       \"type\": \"object\",\n       \"properties\": {\n        \"crossDistributionChainId\": {\n         \"type\":[\"string\",\"null\"],\n         \"description\": \"CrossPlant Status ID (Commercial Status ID)\"\n        },\n        \"crossDistributionChainDescription\": {\n         \"type\":[\"string\",\"null\"],\n         \"description\": \"Cross Distribution Chain Description for the corresponding ID\"\n        }\n       }\n      },\n      \"priceGroup\": {\n       \"type\": \"object\",\n       \"properties\": {\n        \"priceGroupId\": {\n         \"type\":[\"string\",\"null\"],\n         \"description\": \"Product Price Group ID\",\n         \"example\": \"ZZ\"\n        },\n        \"priceGroupDescription\": {\n         \"type\":[\"string\",\"null\"],\n         \"description\": \"Product Price Group Description for the corresponding ID, defined in ERPs\"\n        }\n       }\n      },\n      \"productHierarchyLcos\": {\n       \"type\":[\"string\",\"null\"],\n       \"description\": \"LCOS Product Hierarchy Value\",\n       \"example\": \"1G22080100011E3Z00\"\n      },\n      \"itemCategoryGroup\": {\n       \"type\":[\"string\",\"null\"],\n       \"description\": \"Item Category Group from Product Hierarchy\",\n       \"example\": \"BANS\"\n      },\n      \"salesTechnicalUom\": {\n       \"type\":[\"string\",\"null\"],\n       \"description\": \"Sales Unit of Measure of a product\",\n       \"example\": \"EA\"\n      },\n      \"salesCommercialUom\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"salesIsoUom\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productGroup1Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productGroup2Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productGroup3Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productGroup4Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productGroup5Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute1Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute2Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute3Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute4Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute5Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute6Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute7Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute8Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute9Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"productAttribute10Id\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"deliveringPlantId\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"originGroup\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"minimumOrderQuantity\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"commissionGroup\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"rebateGroup\": {\n       \"type\":[\"string\",\"null\"]\n      },\n      \"maxUdlBatchUpdate\": {\n       \"type\":[\"string\",\"null\"]\n      }\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-B-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-salesdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-salesdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-B-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-salesdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-salesdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-B-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-salesdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-salesdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-C-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-plantsdetails?plant-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-plantsdetails"
                    ],
                    "query": [
                        {
                            "key": "plant-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-C-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-plantsdetails?plant-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-plantsdetails"
                    ],
                    "query": [
                        {
                            "key": "plant-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('List of products with Plant related information');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"object\",\n \"properties\": {\n  \"products\": {\n   \"type\": \"array\",\n   \"description\": \"List of Products with the Plant related info\",\n   \"items\": {\n    \"type\": \"object\",\n    \"title\": \"productPlantDetails\",\n    \"description\": \"This model contains attributes specific to Plant details of Product Data\",\n    \"properties\": {\n     \"productReference\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"SE Product Reference ID\",\n      \"example\": \"A9F95170\"\n     },\n     \"plantCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"ERP Plant Code\",\n      \"example\": \"ZD00\"\n     },\n     \"plannedDeliveryTime\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Planned delivery time (in days) for the product in this plant\",\n      \"example\": \"18\"\n     },\n     \"standardPrice\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Standard Price defined in ERP for this product\"\n     },\n     \"transferPrice\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Transfer Price defined in ERP for this product\"\n     },\n     \"elNumber\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Customer used product reference number\"\n     },\n     \"publisherCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Publisher (system) of this record in UDL. For the list of publishers, please reach out to DDH/IntelDS team.\",\n      \"example\": \"SAPSNB\"\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-C-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-plantsdetails?plant-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-plantsdetails"
                    ],
                    "query": [
                        {
                            "key": "plant-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-C-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-plantsdetails?plant-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-plantsdetails"
                    ],
                    "query": [
                        {
                            "key": "plant-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-C-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-plantsdetails?plant-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-plantsdetails"
                    ],
                    "query": [
                        {
                            "key": "plant-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-D-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-locallistprices?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-locallistprices"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-D-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-locallistprices?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-locallistprices"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('List of Products with Unit of Measure Data from Unified Data Layer');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"object\",\n \"properties\": {\n  \"products\": {\n   \"type\": \"array\",\n   \"description\": \"Products List with UoM Data\",\n   \"items\": {\n    \"type\": \"object\",\n    \"title\": \"productUomDetails\",\n    \"description\": \"This model contains the UoM related attributes for each product\",\n    \"properties\": {\n     \"publisherCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Publisher (system) of this product data in UDL\",\n      \"example\": \"SAPSNB\"\n     },\n     \"productReference\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"SE Product Reference\",\n      \"example\": \"A9F95170\"\n     },\n     \"technicalAlternativeUOM\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Technical Alternate Unit of Measure code\",\n      \"example\": \"ST\"\n     },\n     \"commercialAUOM\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Commercial Alternate Unit of Measure code\",\n      \"example\": \"PCE\"\n     },\n     \"alternativeUomValue\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Alternative Uom coversionValue \",\n      \"example\": \"1\"\n     },\n     \"technicalBasicUOM\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Technical Basic Unit of Measure code\",\n      \"example\": \"ST\"\n     },\n     \"commercialBasicUOM\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Commercial Basic Unit of Measure code\",\n      \"example\": \"PCE\"\n     },\n     \"baseUomValue\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Basic Unit of Measure coversion value\",\n      \"example\": \"1\"\n     },\n     \"maxUdlBatchUpdate\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"04-11-2021\"\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-D-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-locallistprices?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-locallistprices"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-D-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-locallistprices?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-locallistprices"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-D-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-locallistprices?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-locallistprices"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-E-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-uomdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-uomdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-E-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-uomdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-uomdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('List of products with local list prices data');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"object\",\n \"properties\": {\n  \"products\": {\n   \"type\": \"array\",\n   \"items\": {\n    \"type\": \"object\",\n    \"title\": \"productLocalListPrices\",\n    \"description\": \"This model contains attributes specific to local list price data for products\",\n    \"x-examples\": {},\n    \"properties\": {\n     \"productReference\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"A9F95170\",\n      \"description\": \"SE Product Reference ID\"\n     },\n     \"publisherCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"SAPSNB\",\n      \"description\": \"Publisher (system) of this record in UDL. For the list of publishers, please reach out to DDH/IntelDS team.\"\n     },\n     \"salesOrganization\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"ERP Sales Organization Code\",\n      \"example\": \"BH01\"\n     },\n     \"distributionChannel\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"SE Distribution Channel\",\n      \"example\": \"01\"\n     },\n     \"conditionType\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"ZPR0\",\n      \"description\": \"Sales Condition Record Type\"\n     },\n     \"applicationCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"V\",\n      \"description\": \"Pricing application Code defined in SE ERPs\"\n     },\n     \"priceList\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Price List ID in ERPs\",\n      \"example\": \"E9\"\n     },\n     \"currencyCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Currency code for the pricing condition\"\n     },\n     \"conditionValidFrom\": {\n      \"type\":[\"string\",\"null\"],\n      \"format\": \"date\",\n      \"example\": \"2019-01-01\",\n      \"description\": \"Date that the Pricing Condition is valid from\"\n     },\n     \"conditionValidTo\": {\n      \"type\":[\"string\",\"null\"],\n      \"format\": \"date\",\n      \"description\": \"Date that the Pricing Condition is valid to\",\n      \"example\": \"9999-12-31\"\n     },\n     \"conditionRecordNumber\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"0051516730\",\n      \"description\": \"Pricing Condition Record Number defined in ERPs\"\n     },\n     \"conditionRecordPublisher\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"SAPSNB\",\n      \"description\": \"Publisher Code of the pricing condition in UDL\"\n     },\n     \"stdApplicationCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Standard Application Code\"\n     },\n     \"stdConditionType\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Standard Pricing Condition Type\"\n     },\n     \"stdCurrencyCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Standard Currency Code for the Pricing condition\"\n     },\n     \"priceGroup\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Pricing Group defined in ERPs\"\n     },\n     \"division\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Division defined in ERPs\",\n      \"example\": \"10\"\n     },\n     \"releaseStatus\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Pricing condition release status\"\n     },\n     \"purchaseAccountPublisher\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Publisher code of the Purchaser Account\"\n     },\n     \"purchaseAccountId\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Purchase Account ID\"\n     },\n     \"salesOffice\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Sales Office \"\n     },\n     \"transactionType\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Pricing transaction type\"\n     },\n     \"conditionVariant\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Pricing Condition Variant\"\n     },\n     \"companyCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"SE Company/Entity Code\"\n     },\n     \"customerGroup\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Customer Group\"\n     },\n     \"customerConditionGroup\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Customer Condition Group\"\n     },\n     \"activityCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Activity Code\"\n     },\n     \"countryCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Country Code defined in ERPs\",\n      \"example\": \"FR\"\n     },\n     \"productPublisherCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Publisher Code of the Product.\",\n      \"example\": \"BNDCS\"\n     },\n     \"stdCountryCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Standard Country Code in UDL\",\n      \"example\": \"FR\"\n     },\n     \"priceCondition\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"rateValue\": {\n        \"type\":[\"string\",\"null\"],\n        \"description\": \"Price Condition Rate in ERPs\",\n        \"example\": \"15\"\n       },\n       \"rateCurrency\": {\n        \"type\":[\"string\",\"null\"],\n        \"description\": \"Rate Currency defined in Pricing Condition\",\n        \"example\": \"USD\"\n       },\n       \"conditionPricingUnit\": {\n        \"type\":[\"string\",\"null\"],\n        \"description\": \"Condition Pricing Unit in ERPs\",\n        \"example\": \"1\"\n       },\n       \"conditionUom\": {\n        \"type\":[\"string\",\"null\"],\n        \"description\": \"UoM for the Condition Pricing Unit\",\n        \"example\": \"PCE\"\n       }\n      }\n     },\n     \"variableKey\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"VariableKey of a listprice\"\n     },\n     \"conditionTableName\": {\n      \"type\": \"array\",\n      \"description\": \"The name of the table maintaining the list price in the ERP\",\n      \"items\": {\n       \"type\":[\"string\",\"null\"],\n       \"example\": \"601, 602, 603\"\n      }\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-E-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-uomdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-uomdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-E-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-uomdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-uomdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-E-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-uomdetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-uomdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-F-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-costdetails?sales-organization=2010",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-costdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-F-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-costdetails?sales-organization=2010",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-costdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('List of products with cost information');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"object\",\n \"properties\": {\n  \"products\": {\n   \"type\": \"array\",\n   \"items\": {\n    \"type\": \"object\",\n    \"title\": \"productCostDetails\",\n    \"description\": \"This model contains attributes specific to Cost information of Products\",\n    \"properties\": {\n     \"productReference\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"A9F95170\",\n      \"description\": \"SE Product Reference ID\"\n     },\n     \"publisherCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Publisher (system) of this product data in UDL. For the list of publishers, please reach out to DDH/IntelDS team.\",\n      \"example\": \"SAPSNB\"\n     },\n     \"salesOrganization\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"BH01\",\n      \"description\": \"ERP Sales Organization Code\"\n     },\n     \"country\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"Sweden\",\n      \"description\": \"Name of the country\"\n     },\n     \"costValidFrom\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Validity Start Date of the Unit Cost\",\n      \"format\": \"date\",\n      \"example\": \"2019-01-28\"\n     },\n     \"costValidTo\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Validity end date of the unit cost\",\n      \"format\": \"date\",\n      \"example\": \"2038-01-01\"\n     },\n     \"unitCost\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"logisticCosts\": {\n      \"type\": \"object\",\n      \"description\": \"Depicts the freight amount and duties amount of a product\",\n      \"properties\": {\n       \"freightAmount\": {\n        \"type\":[\"string\",\"null\"],\n        \"description\": \"Freight Amount\",\n        \"example\": \"0.82\"\n       },\n       \"dutiesAmount\": {\n        \"type\":[\"string\",\"null\"],\n        \"description\": \"Duties Amount\",\n        \"example\": \"1.50\"\n       }\n      }\n     },\n     \"unitCostEuro\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Unit Cost in EUR currency\",\n      \"example\": \"2.72\"\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-F-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-costdetails?sales-organization=2010",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-costdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-F-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-costdetails?sales-organization=2010",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-costdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-F-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-costdetails?sales-organization=2010",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-costdetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010"
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-G-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-G-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('List of hierarchies from Unified Data Layer');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"object\",\n \"properties\": {\n  \"hierarchies\": {\n   \"type\": \"array\",\n   \"items\": {\n    \"type\": \"object\",\n    \"title\": \"productHierarchyDetails\",\n    \"description\": \"This model contains attributes specific to hierarchies of product data\",\n    \"properties\": {\n     \"publisherCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Publisher of this hierarchy information\",\n      \"example\": \"SNB\"\n     },\n     \"hierarchyCode\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Hierarchy Code\",\n      \"example\": \"991000000000001100\"\n     },\n     \"hierarchyType\": {\n      \"type\":[\"string\",\"null\"],\n      \"example\": \"MAT_LOCAL_HIERARCHY\",\n      \"description\": \"Hierarchy Type\"\n     },\n     \"hierarchyDescription\": {\n      \"type\":[\"string\",\"null\"],\n      \"description\": \"Hierarchy Description\",\n      \"example\": \"Unknown Product Group\"\n     },\n     \"hierarchyLevel\": {\n      \"type\": \"number\",\n      \"description\": \"Hierarchy Level (Code)\",\n      \"example\": 5\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-G-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-G-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-G-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-H-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-pm0hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-pm0hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-H-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-pm0hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-pm0hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('PM0 Hierarchy details From IDS');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"object\",\n \"properties\": {\n  \"pm0hierarchydetails\": {\n   \"type\": \"array\",\n   \"items\": {\n    \"title\": \"productPm0HierarchyDetails\",\n    \"type\": \"object\",\n    \"description\": \"this is a service to retreive the PM0 Hierarchy\",\n    \"properties\": {\n     \"publisherCode\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"hierarchyType\": {\n      \"type\":[\"string\",\"null\"]\n     },\n     \"gdp\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"gdpCode\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"gdpDescription\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"division\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"divisionCode\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"divisionDesc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"productLine\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"productLineCode\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"productLineDescription\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"activityCode\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"strategicProductFamilyCode\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"strategicProductFamilyCode\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"strategicProductFamilyDesc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"family\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"familyCode\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"familyDesc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"subFamily\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"subFamilyCode\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"subFamilyDesc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"series\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"seriesCode\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"seriesDesc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-H-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-pm0hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-pm0hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-H-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-pm0hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-pm0hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-H-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/products-pm0hierarchydetails?publisher-code=BEU",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "products-pm0hierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU"
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-I-01",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/product-lcoshierarchydetails",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "product-lcoshierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-I-02",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/product-lcoshierarchydetails",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "product-lcoshierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            ""
                        ],
                        "type": "text/javascript"
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Positve Response Check\", function () { pm.response.to.have.status(200); });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Response time is less than 55s\", function () { \r",
                            "\r",
                            "    pm.expect(pm.response.responseTime).to.be.below(55000); \r",
                            "\r",
                            "    // Default APIGEE timeout is 55 sec\r",
                            "\r",
                            "    });\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"response must be valid and have a body\", function () {\r",
                            "\r",
                            "     pm.response.to.have.status('Lcos Hierarchy Details from IDS');\r",
                            "\r",
                            "     pm.response.to.be.withBody;\r",
                            "\r",
                            "     pm.response.to.be.json;\r",
                            "\r",
                            "     pm.response.to.not.have.jsonBody(\"error\");\r",
                            "\r",
                            "     \r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "var schema ={\n \"type\": \"object\",\n \"properties\": {\n  \"lcoshierarchydetails\": {\n   \"type\": \"array\",\n   \"items\": {\n    \"title\": \"productLcosHierarchyDetails\",\n    \"type\": \"object\",\n    \"description\": \"Service To retreive the Product Lcos Hierarchy From IDS\",\n    \"properties\": {\n     \"gdp\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"gdpCode\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"gdpDesc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"pcosL1\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"pcosL1Id\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"pcosL1Desc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"pcosL2\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"pcosL1Id\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"pcosL1Desc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     },\n     \"pcosL3\": {\n      \"type\": \"object\",\n      \"properties\": {\n       \"pcosL3Id\": {\n        \"type\":[\"string\",\"null\"]\n       },\n       \"pcosL3Desc\": {\n        \"type\":[\"string\",\"null\"]\n       }\n      }\n     }\n    }\n   }\n  }\n }\n} ;\r",
                            "\r",
                            "   \r",
                            "\r",
                            "   \r",
                            "\r",
                            "pm.test('Schema is valid', function() {\r",
                            "\r",
                            "  //pm.expect(tv4.validate(pm.response.json, schema)).to.be.true;\r",
                            "\r",
                            "  pm.response.to.have.jsonSchema(schema);\r",
                            "\r",
                            "});\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "\r",
                            "pm.test(\"Content-Type header is present in response\", () => {\r",
                            "\r",
                            "  pm.response.to.have.header(\"Content-Type\");\r",
                            "\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-I-03",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/product-lcoshierarchydetails",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "product-lcoshierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test - Mandatory Field Check\", function () { pm.response.to.have.status(400); });\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-I-04",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/product-lcoshierarchydetails",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "product-lcoshierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Not failing\", function () {\r",
                            "    pm.expect(true).to.eql(false);\r",
                            "});\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y.\r",
                            "\r",
                            "// remove mandatory fields -- error should come but is not.\r",
                            "//Backend should throw error when mandatory fields are not passed -- giving 200 OK\r",
                            "// example -- \"salesDocumentType\": \"ZCV\" is mandatory field for the backend is not being passed , still the bakend is giving response."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        },
        {
            "name": "DT-I-05",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "https://api.qa.se.com/v2/reference-data/unified-data-layer/product/product-lcoshierarchydetails",
                    "protocol": "https",
                    "host": [
                        "api",
                        "qa",
                        "se",
                        "com"
                    ],
                    "path": [
                        "v2",
                        "reference-data",
                        "unified-data-layer",
                        "product",
                        "product-lcoshierarchydetails"
                    ],
                    "query": [
                        {
                            "key": "publisher-code",
                            "value": "BEU",
                            "disabled": true
                        },
                        {
                            "key": "sales-organization",
                            "value": "2010",
                            "disabled": true
                        }
                    ]
                }
            },
            "response": [],
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status Test - Expected Error code\", function () {\r",
                            "    pm.expect(pm.response.code).to.equal(400);\r",
                            "});\r",
                            "\r",
                            "//BSL Service -- On removing mandatory fields backend returning 500 instead of 400 Bad Request.\r",
                            "\r",
                            "//difference between Not failing and unexpexted error code recieved -- Not failing means that on passing incorrect paramters still the backend is working fine but unexpected error code means that originally we expected X but instead from backend we got Y."
                        ],
                        "type": "text/javascript"
                    }
                }
            ]
        }
    ]
}